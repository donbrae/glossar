/**
 * @name glossar.js
 * @author Jamie Smith
 * @description Scots glossar
 */

var GLOSSAR = (function() {

    var cfg = {
            search_delay: 500, // Number of ms to wait after last keystroke before doing a search. See functions timeoutStart() timeoutCancel()
            threshold_non_hl: 4 // The minimum character length at which non-exact matches (i.e. those that aren't highlighted) will be shown. This is to prevent long lists of irrelevant results when short words (I, na, ay) are searched for
        },
        state = {
            word: '', // Value of search text box
            word_lc: '', // Value of search text box in lower case
            timeout: null,
            highlight: 0, // True if at least one word is highlighted in results set
            random: [], // Indexes of which random entries have already been selected
            audio: null,
            $audio_button: null
        },
        fuse;

    HTMLAudioElement.prototype.stop = function() {
        this.pause();
        this.currentTime = 0.0;
    }

    function init() {
        const options = {
            shouldSort: true,
            includeScore: false,
            findAllMatches: false,
            threshold: 0.05,
            location: 0,
            distance: 15,
            minMatchCharLength: 1,
            keys: [{
                name: 'sc',
                weight: 0.43
            }, {
                name: 'pl.sc',
                weight: 0.03
            }, {
                name: 'pl.en',
                weight: 0.02
            }, {
                name: 'pl.tr',
                weight: 0.02
            }, {
                name: 'pt.sc',
                weight: 0.05
            }, {
                name: 'pt.tr',
                weight: 0.005
            }, {
                name: 'pp.sc',
                weight: 0.01
            }, {
                name: 'pp.tr',
                weight: 0.01
            }, {
                name: 'pt_pp.sc',
                weight: 0.01
            }, {
                name: 'pt_pp.tr',
                weight: 0.005
            }, {
                name: 'neg.sc',
                weight: 0.03
            }, {
                name: 'neg.tr',
                weight: 0.03
            }, {
                name: 'sc_alt',
                weight: 0.05
            }, {
                name: 'pr',
                weight: 0.05
            }, {
                name: 'en',
                weight: 0.05
            }, {
                name: 'tr',
                weight: 0.2
            }]
        };

        const fuse = new Fuse(GLOSSAR.dict, options);

        var t;

        function searchInit(e) {
            var t,
                $field = $('#searchTextbox');

            function goSearch() {

                // Stop any audio, important especially if the connection is slow and audio file ends up loading later and playing 'randomly'
                if (state.audio) {
                    state.audio.stop();
                }

                if (state.word.length) {
                    $('#result').removeClass('show');
                    print(fuse.search(state.word));
                } else {
                    $('#result').removeClass('show');
                    t = setTimeout(function() {
                        $('#result').html('');
                    }, 100);
                }
            }

            state.word = G.utils.replaceQo( // Replace ‘ and ’ with '
                $.trim(
                    $field.val().replace(/(<([^>]+)>)/ig, ' ') // Strip any HTML
                )
            );
            state.word_lc = state.word.toLowerCase();

            if ($field.val().length) {
                $('#clear-value').addClass('show');
            } else {
                $('#clear-value').removeClass('show');
            }

            if (e && e.code === 'Enter') { // 'Enter' key should allow user to do the search right away, and not wait for the performance-enhancing timeout
                goSearch();
            } else {
                timeoutStart(goSearch);
            }
        }

        // Check for value on page load (after back button or not-yet-implemented GET variable). In timeout because the browser doesn't fill in the input field right away. GET query will be available right away
        t = setTimeout(function() {
            if ($.trim($('#searchTextbox').val()).length) {
                searchInit();
            }
        }, 500);

        if ('ontouchstart' in window === false) {
            $('#searchTextbox').focus();
        }

        $('#searchTextbox').on('keyup', searchInit);

        // Text field pseudo-focus state on clear button focus
        $('#clear-value').on('focus', function() {
            $('#searchTextbox').addClass('form-control-pseudo-focus');
        });

        $('#clear-value').on('blur', function() {
            $('#searchTextbox').removeClass('form-control-pseudo-focus');
        });

        $('#random').click(function() {

            var num, word, $btn = $(this);

            function getRandomIndex() {

                if (state.random.length === G.dict.length) { // If all words have been shown
                    state.random = [];
                }

                num = Math.floor(Math.random() * ((G.dict.length - 1) - 0 + 1) + 0);

                if (state.random.indexOf(num) > -1) { // Index already used?
                    getRandomIndex();
                }
            }

            getRandomIndex();

            word = G.dict[num].sc.join ? G.dict[num].sc[0] : G.dict[num].sc;

            $btn.prop('disabled', true);

            state.word = G.utils.replaceQo(word).toLowerCase();
            state.word_lc = state.word.toLowerCase();
            $('#searchTextbox').val(word);
            $('#result').removeClass('show');
            $('#clear-value').addClass('show');
            print(fuse.search(state.word), function() {
                state.random.push(num);
                $btn.prop('disabled', false);
            });
        });

        $('#clear-value').click(function() {
            $(this).prev('input').val('').focus();
            $(this, '#result').removeClass('show');

            var t = setTimeout(function() {
                $('#result').html('');
            }, 100);

            // Cancel any timeout
            if (state.timeout) {
                clearTimeout(state.timeout);
            }
        });

        $(document).on('click', '.play-audio', function(e) {

            if (!$(this).prop('disabled')) {
                if (state.audio) { // If audio is currently being played
                    state.audio.stop();
                    state.audio.dispatchEvent(new Event('ended')); // Prompt 'ended' event (see below)
                }

                state.$audio_button = $(this);
                state.$audio_button.prop('disabled', true);

                state.audio = document.getElementById(state.$audio_button.data('file'));

                $(state.audio).bind('ended', function() {
                    $(this).unbind('ended');
                    state.$audio_button.prop('disabled', false);
                    state.audio = null;
                });

                state.audio.play();
            }

            e.preventDefault();
        });
    }

    function noResults() {
        $('#result').html('<li class="text-center no-results">Sorry, the’r nae results for <strong>' + state.word + '</strong></li>');
        $('#result').addClass('show');
    }

    function addAudio(s) {
        var buttons = []; // HTML

        $.each([].concat(s), function() {
            if (!$('#' + this).length) {
                $('body').prepend('<audio id="' + this + '" class="audio d-none" src="./audio/' + this.charAt(0) + '/' + this + '.mp3" preload="none"></audio>'); // Eik audio element
            }
            buttons.push('<button class="play-audio btn bg-transparent" data-file="' + this + '"><i class="demo-icon icon-sound"></i></button>'); // Eik button
        });

        return buttons.join('');
    }

    /**
     * Prints data on screen
     * @param {Object} r - Results returned by algorithm
     * @param {Function} callback
     */
    function print(r, callback) {
        var grammar, sc_alt, hl_sc_alt, audio, item,
            hl, hl_all, $li, def, ex, inf, en, ph, pr, pt, pt_arr, pp, pp_arr, pt_pp, pt_pp_arr, neg, pl, pl_arr, or,
            results_filtered = [];

        if (r && r.length) {
            $('#result').html('');

            $.each(r, function() {

                item = this.item;

                if (
                    state.word.length >= cfg.threshold_non_hl || // Length of word user has input is equal to or greater than threshold
                    arrayToLowerCase([].concat(item.sc)).indexOf(state.word_lc) > -1 || // Exact match (Scots)
                    arrayToLowerCase([].concat(item.en)).indexOf(state.word_lc) > -1 || // Exact match (English)
                    (item.tr && arrayToLowerCase([].concat(item.tr)).indexOf(state.word_lc) > -1) || // Length of this word (returned by results) is below threshold but user input is a trigger for this word
                    (item.pr && arrayToLowerCase([].concat(item.pr)).indexOf(state.word_lc) > -1) || // As per previous but pertains to pronunciation
                    (item.pl && item.pl.sc && arrayToLowerCase([].concat(item.pl.sc)).indexOf(state.word_lc) > -1) || // As per previous but pertains to Scots plural
                    (item.pl && item.pl.en && arrayToLowerCase([].concat(item.pl.en)).indexOf(state.word_lc) > -1) || // As per previous but pertains to English plural
                    (item.pl && item.pl.tr && arrayToLowerCase([].concat(item.pl.tr)).indexOf(state.word_lc) > -1) // As per previous but pertains to plural trigger
                ) {
                    results_filtered.push(item);

                    grammar = item.gr ? '<span class="grammar">' + [].concat(item.gr).join('; ') + '</span> ' : ''; // Grammar
                    sc_alt = item.sc_alt ? '<div class="sc-alt">(alt. Scots maks: <span>' + [].concat(item.sc_alt).join(', ') + '</span>)</div> ' : ''; // Alternative Scots spellings
                    en = item.en ? formatMultiple(item.en, ',', 'en') : ''; // English
                    pr = item.pr ? '<span class="pr">(‘' + [].concat(item.pr).join('’, ‘') + '’)</span> ' : ''; // Pronunciation
                    def = item.def ? formatMultiple(item.def, ';', 'def') : ''; // Definition
                    ex = item.ex ? formatMultiple(item.ex, ';', 'ex') : ''; // Examples
                    ph = item.ph ? ' class="phrase"' : ''; // Phrases, idioms
                    inf = item.inf ? formatMultiple(item.inf, ';', 'inf') : ''; // Additional information
                    or = item.or ? formatOrigin(item.or) : ''; // Origin
                    hl_sc_alt = item.sc_alt ? [].concat(item.sc_alt) : []; // Make sure to highlight any alternative Scots words
                    audio = item.au ? '<span class="audio">' + addAudio(item.au) + '</span> ' : ''; // Audio

                    /**
                     * Highlight based on trigger words by default; if not, use the specific highlight words
                     */

                    // Simpler (Scots) verbs
                    pt_arr = item.pt && item.pt.sc ? [].concat(item.pt.sc) : []; // Any past tense
                    pt_arr = item.pt && item.pt.tr ? pt_arr.concat(item.pt.tr) : pt_arr; // Any past tense triggers

                    pp_arr = item.pp && item.pp.sc ? [].concat(item.pp.sc) : []; // Any past participle
                    pp_arr = item.pp && item.pp.tr ? pp_arr.concat(item.pp.tr) : pp_arr; // Any past tense triggers

                    pt_pp_arr = item.pt_pp && item.pt_pp.sc ? [].concat(item.pt_pp.sc) : []; // Where Scots past tense and past participle are the same
                    pt_pp_arr = item.pt_pp && item.pt_pp.tr ? pt_pp_arr.concat(item.pt_pp.tr) : pt_pp_arr; // triggers

                    neg = item.neg ? '<span class="neg">neg. <span>' + [].concat(item.neg.sc).join(', ') + '</span></span>' : ''; // Any Scots negative

                    // Noun plurals
                    pl_arr = item.pl && item.pl.sc ? [].concat(item.pl.sc) : [];
                    pl_arr = item.pl && item.pl.tr ? pl_arr.concat(item.pl.tr) : pl_arr; // Triggers

                    if (item.hl) { // Specific trigger highlight words
                        hl_all = [].concat(item.hl);
                    } else if (item.tr) { // Standard triggers
                        hl_all = [].concat(item.tr);
                    } else { // No triggers of any kind
                        hl_all = [];
                    }
                    // Add any alternative Scots words which should trigger highlighting
                    if (hl_sc_alt.length) {
                        hl_all = hl_all.concat(hl_sc_alt);
                    }
                    // Add any phonetic spellings
                    if (item.pr) {
                        hl_all = hl_all.concat(item.pr);
                    }
                    // Add any highlighting words
                    if (hl_all.length) {
                        hl = ' data-hl="' + hl_all.filter(G.utils.onlyUnique).join(',') + '"';
                    } else {
                        hl = ''; // No trigger words
                    }

                    pt = pt_arr.length ? '<span class="pt">pt <span data-hl="' + pt_arr.join(',') + '">' + [].concat(item.pt.sc).join(', ') + '</span></span>' : ''; // Past tense (simpler verbs)

                    pp = pp_arr.length ? '<span class="pp">ptp <span data-hl="' + pp_arr.join(',') + '">' + [].concat(item.pp.sc).join(', ') + '</span></span>' : ''; // Past participle (simpler verbs)

                    pt_pp = pt_pp_arr.length ? '<span class="pt-pp">pt ptp <span data-hl="' + pt_pp_arr.join(',') + '">' + [].concat(item.pt_pp.sc).join(', ') + '</span></span>' : ''; // Identical past tense and past participle (simpler verbs)

                    pl = pl_arr.length ? '<span class="pl">pl <span data-hl="' + pl_arr.join(',') + '">' + [].concat(item.pl.sc).join(', ') + '</span></span>' : ''; // Noun plurals

                    $('#result').append('<li' + ph + '><span class="sc"' + hl + '>' + G.utils.curlyQuotes([].concat(item.sc).join(', ')) + '</span> ' +
                        audio +
                        pr +
                        grammar +
                        sc_alt +
                        pl +
                        pt +
                        pp +
                        pt_pp +
                        neg +
                        def +
                        G.utils.curlyQuotes(en) +
                        ex +
                        inf +
                        or +
                        '</li>');
                }
            });

            if (results_filtered.length) { // If there is at least one relevant result amang returned results
                highlight(results_filtered, function() {
                    if (state.highlight) {
                        $($('#result > li').get().reverse()).each(function() { // Move highlighted entries to the top
                            $li = $(this);
                            if ($li.find('span').hasClass('hl')) { // If any of the Scots words (e.g. headword, past tense) is highlighted
                                $li.parent().prepend($li);
                            }
                        });
                    }

                    if (!state.highlight && state.word.length < cfg.threshold_non_hl) { // If nothing in the UI has been highlighted and the length of user input is below the threshold
                        noResults();
                    } else {
                        $('#result').addClass('show');
                    }

                    if (typeof(callback) === 'function') {
                        callback();
                    }
                });
            } else { // !results_filtered.length (after we've filtered the initial results returned by algorithm)
                noResults();
            }
        } else { // !r.length (initial results)
            noResults();
        }
    }

    function formatOrigin(obj) {
        var origin = [].concat(obj),
            ul = [];

        $.each(origin, function(i) {
            if (this.join) { // If an array
                ul.push(this[0] + ' <span>' + this[1] + '</span>');
            } else { // If a string
                ul.push(this);
            }
        });

        if (ul.length > 1) { // There are multiple (possible) origins

            return '<div class="or-container">Origin: <ul class="or"><li class="list-inline-item">' + ul.join('; </li><li class="list-inline-item">') + '</li></ul></div>';
        } else { // If there is just one origin
            return '<div class="or-container">Origin: ' + ul[0] + '</div>';
        }
    }

    /**
     * Returns a single array of words (to cover multidemensional arrays) for the purposes of highlighting them in the UI
     * @param {Array|String} w
     * @returns {Array}
     */
    function makeSingleArray(w) {
        var words = [];

        // Redd word(s)
        if (w.join) { // Result is an array of values
            $.each(w, function(i) {
                $.each([].concat(this), function() {
                    if (this.indexOf(', ') > -1) { // If multiple 'synomyms'
                        words = words.concat(this.split(', ')); // Split any 'synomym' meanings and add to 'words' array
                    } else {
                        words = words.concat(this); // Add array to the 'words' array
                    }
                });
            });
        } else { // Result is single string
            words.push(w);
        }

        // Make lowercase
        $.each(words, function(i) {
            words[i] = this.toLowerCase();
        });

        return words;
    }

    /**
     * For English words, definitions, examples etc. Creates an <ol> out of an array, or, if passed only a string, returns the original string
     * @param {Array} word
     * @param {String} separator - e.g. ';'
     * @param {String} cl - class, e.g. 'en'
     * @returns {String}
     */
    function formatMultiple(word, separator, cl) {
        var words = [].concat(word), // Make array in case we're passed a string
            ol = [];

        $.each(words, function() {
            if (this.join) { // If an array
                ol.push(this.join(separator + ' ')); // Join array items into a single string
            } else { // If a string
                ol.push(this);
            }
        });

        if (ol.length > 1) { // There are multiple meanings
            return '<ol class="' + cl + '"><li>' + ol.join('</li><li>') + '</li></ol>';
        } else { // If there is just one meaning
            return '<div class="' + cl + '">' + ol[0] + '</div>';
        }
    }

    function highlight(r, callback) {
        var i = r.length - 1;

        state.highlight = 0;

        function hielicht($el, items, en) {
            if ($el.data('hl')) { // Add any highlight words to the items array
                items = items.concat($el.data('hl').split(','));
            }
            $.each(items, function() {
                if (this &&
                    (this.toLowerCase() === state.word_lc ||
                        (en && en.indexOf(state.word_lc) > -1))
                ) {
                    $el.addClass('hl');
                    state.highlight = state.highlight + 1;
                    return false; // Exit loop
                }
            });
        }

        // Clear any highlights
        $('.sc, .pt span, .pp span', '#result').each(function() {
            $(this).removeClass('hl');
        });

        // Add any new highlights
        $($('#result > li').get().reverse()).each(function() {

            // Head word(s)
            items = $('.sc', this).text().split(', ');
            hielicht(
                $('.sc', this), // UI element
                items, // Scots words
                r[i].en ? makeSingleArray(r[i].en) : null // Corresponding English words to cause highlighting
            );

            // Past tense
            if ($('.pt', this).length) {
                items = $('.pt span', this).text().split(', ');
                hielicht(
                    $('.pt span', this),
                    items, // Scots words
                    r[i].pt && r[i].pt.tr ? makeSingleArray(r[i].pt.tr) : null // Corresponding trigger words to cause highlighting
                );
            }

            // Past participle
            if ($('.pp', this).length) {
                items = $('.pp span', this).text().split(', ');
                hielicht(
                    $('.pp span', this),
                    items, // Scots words
                    r[i].pp && r[i].pp.tr ? makeSingleArray(r[i].pp.tr) : null
                );
            }

            // Identical past tense and past participle
            if ($('.pt-pp', this).length) {
                items = $('.pt-pp span', this).text().split(', ');
                hielicht(
                    $('.pt-pp span', this),
                    items, // Scots words
                    r[i].pt_pp && r[i].pt_pp.tr ? makeSingleArray(r[i].pt_pp.tr) : null
                );
            }

            // Negative
            if ($('.neg', this).length) {
                items = $('.neg span', this).text().split(', ');
                hielicht(
                    $('.neg span', this),
                    items,
                    r[i].neg && r[i].neg.tr ? makeSingleArray(r[i].neg.tr) : null
                );
            }

            // Plurals
            if ($('.pl', this).length) {
                items = $('.pl span', this).text().split(', ');
                hielicht(
                    $('.pl span', this),
                    items,
                    r[i].pl && r[i].pl.en ? makeSingleArray(r[i].pl.en) : null
                );
            }

            i = i - 1;
        });

        callback();
    }

    function timeoutStart(callback) {

        function start() {
            state.timeout = setTimeout(callback, cfg.search_delay);
        }

        if (!state.timeout) { // If there is no timeout currently running
            start();
        } else { // If there's a timeout in place already
            clearTimeout(state.timeout); // Cancel timeout
            start(); // Start a new one
        }
    }

    // Returns array where each item is in lower case
    function arrayToLowerCase(array) {
        var a = [];

        $.each(array, function() {
            a.push(this.toString().toLowerCase());
        });

        return a;
    }

    return {
        init: init,
        state: state
    };

}());
var GLOSSAR = GLOSSAR || {};

var G = GLOSSAR;

G.notes = {
    a: 'protologism; frae analogy wi Dutch and French-influenced <em>Armenie</em>, <em>Roumainie</em>, <em>Roushie</em> etc., vs <em>-a</em> or <em>-ia</em> (meanin ‘land’ or ‘steid’) that English haes borraed frae the Laitin', // Californie et al
    b: '<em>-ae</em> and <em>-y/-ie</em> steid-name endins shaws Dutch and French influence, vs <em>-a</em> or <em>-ia</em> (meanin ‘land’ or ‘steid’) that English haes borraed frae the Laitin', // Slovakie et al
    c: 'The etymology o <em>no</em>, <em>nae</em>, <em>na</em> etc. is gey quirkie. Consult the <a href="https://dsl.ac.uk" target="_blank">DSL</a> and <a href="https://edinburghuniversitypress.com/catalog/product/view/id/19910/s/book-concise-scots-dictionary" target="_blank">CSD2</a> for mair',
    or: {
        af: 'Auld French',
        mf: 'Middle French',
        f: 'French',
        an: 'Anglo-Norman',
        l: 'Laitin',
        ga: 'Gaelic',
        nfd: 'northren French dialect',
        ae: 'Auld English',
        me: 'Middle English',
        lme: 'Late Middle English',
        ms: 'Middle Scots',
        es: 'Early Scots',
        ems: 'Early Middle Scots',
        lms: 'Late Middle Scots',
        mods: 'Modren Scots',
        emods: 'Early Modren Scots',
        emods2: 'Earlier Modren Scots',
        anor: 'Auld Norse',
        as: 'Aulder Scots',
        md: 'Middle Dutch',
        eme: 'Early Modren English',
        mode: 'Modren English',
        mlg: 'Middle Laich German',
        rl: 'Roman Law',
        it: 'Italians',
        gk: 'Greek'
    }
};

G.ex = {
    a: "Alasdair and Ashley wis feart they wadna win at the kirk in time tae be mairit",
    b: "It wis that thrang Isobel didna ken whan she wad get oot o wark",
    c: "I kenna what ye mean — ye’r haiverin, mun!",
    d: "I wadna lat it fash ye",
    e: "The CEO luit skairhauders speir at him efter the meetin",
    f: "Her depute gree’d tae tak in haund the airtin o the policy and its pittin intil effect",
    g: "It wis a gey and braw day",
    h: "I ken brawly richt bi wrang!",
    i: "Jamie wis in a swither aboot what Hogmanay perty tae gang til",
    j: "As the ae guardian o Scots it faws til us tae gie this hamelt leid bield, and mak namely its pairt in Scotland’s identity nou and in time tae come",
    k: "We are wirkin nou wi aw pairt-takars for tae deliver on the ettles that’s intil the policy",
    l: "In terms o tred, o the guids and services Scotland inbrings, aroond 60 per cent is thocht tae be frae the lave o the Unitit Kinrick",
    m: "The First Mínister wrate til her cabinet secretar anent the forementiont policy",
    n: "I’m meetin up wi an auld freend the day",
    o: "The Fisk Secretar-depute will the day set furth new wittins anent the proponed tax exemptions",
    p: "The day’s gemm agin Aiberdeen will be played at hame",
    q: "Jeannie stuid anent him, fair pecht",
    r: "Mind aye tae be furthie til unco fowk",
    s: "A new pipe netwark inbrocht watter tae the hoose",
    t: "The netwark wis doun sae he couldna send ony emails",
    u: "The heezin up o hoose prices and financial mercat speculation thegither wis aye mair like tae gar the economy clyte",
    v: "He gied an unco braw performance",
    w: "The new symphony is a stuir and sonsie wark, if a bittie wrocht-up in pairts",
    x: "Shuirly the’r mair tae the story than that",
    y: "The pub wis mair thrang than they’d jaloused it wad be",
    z: "I jaloused I’d better haud ma tongue!",
    a1: "Dae ye hae anither ane o thir?",
    b1: "The’r ower muckle guid stuff on TV thir days that I hinna the time tae watch it aw",
    c1: "I wad luve tae stey and hae a bit blether wi ye, but I maun be gettin hame",
    d1: "Stewart haed aboot fower hunder poond in his bank accoont; Ruth haed mair",
    e1: "Oot o the lot o us I’d haen the maist beers",
    f1: "Rax me ane o thae ile filters, wad ye?",
    g1: "The app’s uiser interface is juist what the client’s ettlin efter",
    h1: "I’v juist gotten stertit the nou sae ye’ll hae tae gie me a bit mair time",
    i1: "The Green Pairty convener wis ettlin tae appynt a depute by the end o the simmer"
};

G.pr = {
    juist: ['jist', 'joost', 'jeest', 'jeust', 'doost', 'dist']
};

G.dict = [{
    sc: ['ay', 'aye'],
    en: 'yes',
    gr: 'exclamation'
}, {
    sc: ['an', 'and'],
    pr: 'an',
    en: 'and',
    gr: ['conj']
}, {
    sc: 'anent',
    en: [
        ['opposite', 'in front of', 'before'],
        ['concerning', 'about', 'in view of'],

    ],
    gr: ['prep', 'formal'],
    tr: ['regarding', 're', 'anenst', 'about'],
    hl: ['regarding', 're', 'anent', 'aboot'],
    or: [
        [G.notes.or.as, 'anent'],
        [G.notes.or.ae, 'on efen']
    ],
    ex: [G.ex.q, G.ex.o]
}, {
    sc: 'binna',
    en: 'don\'t be',
    tr: ['do not be', 'binnae'],
    gr: ['imperative']
}, {
    sc: 'binna',
    en: [
        ['unless', 'except']
    ],
    tr: 'binnae',
    gr: ['conj']
}, {
    sc: 'binna',
    en: 'except for',
    tr: 'binnae',
    gr: ['prep', 'líterar']
}, {
    sc: ['because', 'acause'],
    en: 'because',
    gr: ['conj']
}, { // E
    sc: 'efter',
    en: ['after', 'later'],
    tr: ['aifter', 'syne'],
    gr: ['adv', 'prep', 'conj'],
    or: [
        [G.notes.or.as, 'efter, eftir'],
        [G.notes.or.ae, 'æfter']
    ],
    ex: 'I’ll see ye efter!',
    au: 'efter'
}, { // F
    sc: 'forby',
    sc_alt: 'forbye',
    pr: 'forBye',
    en: [
        ['besides', 'in addition to'],
        ['except'],
        ['beside', 'beyond'],
        ['let alone', 'not to mention', 'far from', 'much less']
    ],
    tr: 'also',
    hl: 'forby',
    gr: ['prep']
}, {
    sc: ['fae', 'frae', 'thrae'],
    en: 'from',
    gr: ['prep', 'conj'],
    or: [
        [G.notes.or.as, 'fra, frae'],
        [G.notes.or.anor, 'frá']
    ]
}, {
    sc: ['if', 'gif'],
    en: 'if',
    tr: 'gin',
    hl: 'gif',
    gr: ['conj'],
    or: [
        [G.notes.or.as, 'gef, gefe, geve']
    ]
}, {
    sc: 'gin',
    en: [
        ['if', 'whether'], 'if only'
    ],
    tr: 'gif',
    hl: 'gin',
    gr: ['conj'],
    or: [
        [G.notes.or.lms + ' haes', 'gin']
    ]
}, { // I
    sc: 'ilk',
    en: [
        ['each one', 'every one']
    ],
    tr: 'ilka',
    hl: 'ilk',
    gr: ['pron']
}, {
    sc: ['ilka ane', 'ilkane'],
    en: [
        ['each one', 'everyone']
    ],
    gr: 'pron'
}, {
    sc: ['wha', 'fa'],
    pr: ['whah', 'whau', 'whae', 'whiu', 'fa', 'a'],
    en: 'who',
    tr: ['whae', 'whay', 'whey'],
    gr: 'pron'
}, {
    sc: 'maist',
    def: [
        ['the mucklest amount, the lairgest nummer, the majority']
    ],
    tr: ['most', 'majority', 'maste'],
    gr: 'determiner and pronoun',
    or: [
        [G.notes.or.as, 'mast(e), maist(e)'],
        [G.notes.or.ae, 'mǣst, māst']
    ],
    ex: [G.ex.e1, 'Maist o the dishes wis duin']
}, { // N
    sc: 'naewey',
    en: [
        ['on no account', 'nowhere', 'no way']
    ],
    tr: ['naewye', 'nae wey', 'naewhaur', 'on nae accoont']
}, {
    sc: 'naewhaur',
    en: 'nowhere',
    tr: ['naewhere']
}, {
    sc: 'nor',
    pr: ['naur', 'nir', 'nar'],
    en: ['than', 'and not', '(but) that'],
    gr: ['conj'],
    tr: ['but that'],
    or: [
        [G.notes.or.as, 'nor'],
        [G.notes.or.me, 'nor']
    ]
}, {
    sc: 'ane',
    pr: ['ane', 'een', 'yin', 'wan'],
    en: 'one',
    gr: 'cardinal number',
    tr: ['ae', 'ain', 'ann', 'yae', 'yay'],
    hl: ['ane', 'ain', 'yin', 'wan', 'een', 'ann'],
    inf: '<span>Ane</span> is aften uised the day as an adjective, tae, whaur in tradítional spoken Modren Scots ye’r mair like tae hear <span>ae</span> (also pronounced ‘yae’). <span>Ane</span> wis typically the adjective in Aulder Scots'
}, {
    sc: 'ony',
    en: [
        ['any', 'either']
    ],
    gr: ['pron'],
    or: 'see adj'
}, { // O
    sc: 'o',
    pr: ['oh', 'ae', 'uh'], // Eikit to tr[] due to word-length threshold
    en: 'of',
    tr: ['ey', 'ay', 'y', 'u', 'o\'', 'ae', 'uh', 'oh'],
    gr: 'prep',
    or: [
        [G.notes.or.as, 'of, off'],
        [G.notes.or.ae, 'of']
    ]
}, {
    sc: 'onyane',
    en: 'anyone',
    gr: ['pron']
}, {
    sc: 'oor',
    pr: 'oor',
    en: 'our',
    tr: 'wir',
    gr: ['possesive pronoun']
}, {
    sc: 'ower',
    pr: ['uower', 'oar', 'oor', 'err'],
    en: [
        ['above', 'cross'],
        ['down from', 'out of', 'out at'],
        ['beyond the control or capabilities of', 'too much for']
    ],
    tr: ['owre', 'over'],
    gr: 'prep',
    or: 'see adv'
}, {
    sc: 'wir',
    pr: ['wir', 'wur', 'war', 'weer', 'wor'],
    en: 'our',
    tr: 'oor',
    hl: 'wir',
    gr: ['possesive pronoun'],
    au: 'wir'
}, {
    sc: ['whaniver', 'faniver'],
    en: 'whenever',
    tr: ['wheniver', 'fanever']
}, {
    sc: ['what', 'fat'],
    sc_alt: ['whit', 'fit'],
    pr: ['what', 'whaut', 'whit', 'whut', 'fit', 'fut', 'fat', 'ut'],
    en: 'what',
    gr: ['adj', 'adv', 'pron', 'conj']
}, {
    sc: 'wi',
    pr: ['wi', 'wae', 'w'],
    en: 'with',
    gr: ['preposition']
}, {
    sc: ['whiles', 'fyles'],
    pr: ['whilez', 'filez'],
    en: [
        ['while', 'whilst']
    ],
    gr: ['conj']
}, {
    sc: ['thay', 'they'],
    en: 'they',
    tr: ['thai']
}, {
    sc: ['I', 'A', 'ah', 'eh'],
    pr: ['ah', 'aw', 'eh', 'eye'],
    en: 'I',
    tr: ['e'],
    gr: 'first personal pronoun',
    ex: ['I ken whit ye mean', 'I stey in the wast end o Edinburgh'],
    or: [
        [G.notes.or.as, 'I'],
        [G.notes.or.ae, 'ic']
    ]
}, {
    sc: 'the',
    en: 'the'
}, {
    sc: ['thare', 'there'],
    en: 'there'
}, {
    sc: 'partícular',
    pr: ['purTikyulur', 'purTiklur', 'parTeekyulur', 'parTeeklur'],
    sc_alt: ['parteecular'],
    en: 'particular',
    tr: 'partiecular',
    gr: 'adj'
}, {
    sc: 'syne',
    pr: ['sine', 'seen'],
    en: 'after',
    tr: 'efter',
    gr: 'prep',
    or: 'see adv'
}, {
    sc: 'syne',
    pr: ['sine', 'seen'],
    en: [
        ['since', 'from the time that'],
        ['since', 'because', 'seeing that']
    ],
    gr: 'conj',
    or: 'see adv'
}, { // T
    sc: 'til',
    en: 'to',
    gr: 'prep',
    inf: '<em>til</em> is whiles uised only afore vouels and the letter h, and aften no afore verbs',
    ex: ['I walkit ower and spak til him', G.ex.i]
}, {
    sc: 'thae',
    en: 'those',
    tr: ['they', 'thai', 'ey'],
    gr: 'pron pl, dem adj',
    or: [
        [G.notes.or.as, 'tha(i), thay, thae'],
        [G.notes.or.ae, 'ðā']
    ],
    ex: [G.ex.f1, 'Lat’s hae a blether aboot thae twa issues ye brocht up in the meetin']
}, {
    sc: ['than', '’an'],
    en: 'than',
    pr: ['than', 'thaun', 'thin', 'dan'],
    gr: 'conj',
    tr: ['nor', 'an'],
    hl: ['than', 'an'],
    ex: 'Ye maun can dae better than that!',
    or: [
        [G.notes.or.as, 'than, then'],
        [G.notes.or.ae, 'ðanne']
    ]
}, {
    sc: 'thir',
    pr: ['thir', 'thur'],
    en: 'these',
    gr: 'dem pron, dem adj',
    or: [
        [G.notes.or.as, 'thir']
    ],
    ex: [G.ex.a1, G.ex.b1]
}];

G.utils = {
    // Adds <span> around string 's'
    addSpan: function(s) {
        return '<span>' + s + '</span>';
    },
    // Works with filter method to get unique array values
    onlyUnique: function(value, index, self) {
        return self.indexOf(value) === index;
    },
    // Replaces ‘ and ’ with '
    replaceQo: function(s) {
        return s.replace(/‘|’/g, "'");
    },
    // Replaces ' with ’
    curlyQuotes: function(s) {
        return s.replace(/'/g, "’");
    }
};
/**
 * Verbs
 */

G.v = {}; // Verbs

// Complex Verbs

// Complex verb template
// v {{ wird }} [search also for // v {{ wird }}]
// G.v.{{ wird }} = {
//     sc: [],
//     en: [],
//     tr: [],
//     neg: {
//         sc: [],
//         en: [
//             []
//         ],
//         tr: [],
//         tps: { // > Third person singular
//             sc: [],
//             en: [
//                 []
//             ],
//             tr: []
//         }
//     },
//     pt: {
//         sc: [],
//         en: [],
//         tr: [],
//         neg: {
//             sc: [],
//             en: []
//         }
//     },
//     pp: {
//         sc: '',
//         en: '',
//         tr: [],
//     },
//     ing: {
//         sc: [],
//         en: '',
//         tr: [],
//     },
//     tps: {
//         sc: [],
//         en: '',
//         tr: [],
//     }
// };
// G.v.{{ wird }}.trigs = [].concat( // Control display of conjugated '{{ wird }}'
//     G.v.{{ wird }}.sc, G.v.{{ wird }}.en, G.v.{{ wird }}.tr, // {{ wird }}
//     G.v.{{ wird }}.neg.sc, G.v.{{ wird }}.neg.en, G.v.{{ wird }}.neg.tr, // {{ wird }} neg
//     G.v.{{ wird }}.neg.tps.sc, G.v.{{ wird }}.neg.tps.en, G.v.{{ wird }}.neg.tps.tr, // {{ wird }} neg third person singular
//     G.v.{{ wird }}.pt.sc, G.v.{{ wird }}.pt.en, G.v.{{ wird }}.pt.tr, // {{ wird }} pt
//     G.v.{{ wird }}.pt.neg.sc, G.v.{{ wird }}.pt.neg.en, // {{ wird }} pt neg
//     G.v.{{ wird }}.pp.sc, G.v.{{ wird }}.pp.en, G.v.{{ wird }}.pp.tr, // {{ wird }} pp
//     G.v.{{ wird }}.ing.sc, G.v.{{ wird }}.ing.en, G.v.{{ wird }}.ing.tr, // {{ wird }} -ing form
//     G.v.{{ wird }}.tps.sc, G.v.{{ wird }}.tps.en, G.v.{{ wird }}.tps.tr // {{ wird }} third person singular
// );
// G.v.{{ wird }}.meta = { // Metadata
//     gr_hw: G.utils.addSpan(G.v.{{ wird }}.sc[0]) + ' etc.' // Which headwords should appear in the grammar definition
// };
// {{ wird }} end

// v gae
G.v.gae = {
    sc: ['gae', 'gang', 'gan', 'ging'],
    en: ['go'],
    neg: {
        sc: ['gaena', 'gangna', 'gingna'],
        en: [
            ['do not go', 'go not']
        ],
        tr: ['ganna', 'gona', 'don\'t go'],
        tps: { // > Third person singular
            sc: ['gaesna', 'gangsna', 'gansna', 'gingsna'],
            en: [
                ['does not go', 'goes not']
            ],
            tr: ['goesna', 'doesn\'t go']
        }
    },
    pt: {
        sc: ['gaed', 'went', 'ginged'],
        en: 'went',
        tr: ['gad', 'goed', 'ganged'],
        neg: {
            sc: ['gaedna'],
            en: 'did not go'
        }
    },
    pp: {
        sc: 'gane',
        en: 'gone',
        tr: ['ganed', 'goan', 'gaen'],
    },
    ing: {
        sc: ['gaun', 'gangin', 'gaein', 'gingin'],
        en: 'going',
        tr: ['goin', 'gawn', 'gawin', 'gauin'],
    },
    tps: {
        sc: ['gaes', 'gangs', 'gans', 'gings'],
        en: 'goes',
        tr: ['gings'],
    }
};
G.v.gae.trigs = [].concat( // Control display of conjugated 'gae'
    G.v.gae.sc, G.v.gae.en, // gae
    G.v.gae.neg.sc, // gae neg
    G.v.gae.neg.tps.sc, // gae neg third person singular
    G.v.gae.pt.sc, G.v.gae.pt.en, G.v.gae.pt.tr, // gae pt
    G.v.gae.pt.neg.sc, // gae pt neg
    G.v.gae.pp.sc, G.v.gae.pp.en, G.v.gae.pp.tr, // gae pp
    G.v.gae.ing.sc, G.v.gae.ing.en, G.v.gae.ing.tr, // gae -ing form
    G.v.gae.tps.sc, G.v.gae.tps.en // gae third person singular
);
G.v.gae.meta = { // Metadata
    gr_hw: 'v ' + G.utils.addSpan('tae ' + G.v.gae.sc[0]) + ' etc.' // Which headwords should appear in the grammar definition
};
// gae end

// v gie
G.v.gie = {
    sc: 'gie',
    en: 'give',
    pr: 'gee',
    neg: {
        sc: 'giena',
        en: [
            ['do not give', 'give not']
        ],
        tps: { // > Third person singular
            sc: 'giesna',
            en: [
                ['does not give', 'gives not']
            ]
        }
    },
    pt: {
        sc: 'gied',
        en: 'gave',
        neg: {
            sc: 'giedna',
            en: [
                ['did not give', 'gave not']
            ]
        }
    },
    pp: {
        sc: ['gien', 'gied'],
        en: 'given'
    },
    ing: {
        sc: ['giein'],
        en: 'giving',
        tr: 'givin'
    },
    tps: {
        sc: 'gies',
        en: 'gives'
    }
};
G.v.gie.trigs = [].concat( // Control display of conjugated 'gie'
    G.v.gie.sc, G.v.gie.en, // gie
    G.v.gie.pr, // gie pr
    G.v.gie.neg.sc, // gie neg
    G.v.gie.neg.tps.sc, // gie neg third person singular
    G.v.gie.pt.sc, G.v.gie.pt.en, // gie pt
    G.v.gie.pt.neg.sc, // gie pt neg
    G.v.gie.pp.sc, G.v.gie.pp.en, // gie pp
    G.v.gie.ing.sc, G.v.gie.ing.en, G.v.gie.ing.tr, // gie -ing form
    G.v.gie.tps.sc, G.v.gie.tps.en // gie third person singular
);
G.v.gie.meta = { // Metadata
    gr_hw: 'v ' + G.utils.addSpan('tae ' + G.v.gie.sc)
};
// gie end

// v will
G.v.will = {
    sc: 'will',
    en: 'will',
    pr: ['will', 'wull'],
    neg: {
        sc: ['winna', 'willna'],
        sc_alt: ['winnae', 'willnae'],
        tr: ['wullna', 'wullnae', 'wunna', 'wunnae', 'winny', 'wunny'],
        en: 'will not'
    },
    pt_pp: {
        sc: 'wad',
        pr: ['wid', 'wad', 'wud'],
        en: 'would',
        neg: {
            sc: 'wadna',
            en: [
                ['wouldn\'t', 'would not']
            ],
            tr: ['widnae', 'wadnae', 'wudnae', 'widna', 'wudna', 'widny', 'wudny'],
        }
    }
};
G.v.will.trigs = [].concat( // Control display of conjugated 'will'
    G.v.will.sc, G.v.will.en, // will
    G.v.will.pr, // will pr
    G.v.will.neg.sc, G.v.will.neg.sc_alt, G.v.will.neg.tr, G.v.will.neg.en, // will neg
    G.v.will.pt_pp.sc, G.v.will.pt_pp.pr, // will pt_pp
    G.v.will.pt_pp.neg.sc, G.v.will.pt_pp.neg.tr, G.v.will.pt_pp.neg.en // will pt_pp neg
)
// will end
// v be
G.v.be = {
    sc: 'be',
    en: 'be',
    tpps: { // Third person present singular
        sc: 'is',
        en: 'is',
        neg: {
            sc: ['isna', 'isnae'],
            en: [
                ['is not', 'isn\'t']
            ],
        }
    },
    ps: { // Present singular
        sc: 'am',
        en: 'am',
        tr: 'um',
        neg: {
            sc: ['amna', 'amnae'],
            en: [
                ['am not', 'amn\'t']
            ],
            tr: ['umna', 'umnae', 'ament']
        }
    },
    psp: { // Present singular and plural
        sc: 'ar',
        en: 'ar',
        tr: ['ur', 'are'],
        neg: { // Present singular and plural
            sc: ['arna', 'arnae'],
            en: [
                ['are not', 'aren\'t']
            ],
            tr: ['urna', 'urnae']
        }
    },
    neg: {
        sc: 'binna',
        en: 'is not',
        tr: ['binnae', 'is no', 'isn\'t']
    }
};
G.v.be.trigs = [].concat( // Control display of conjugated 'be'
    G.v.be.sc, G.v.be.en, // be
    'to be', 'tae be',
    G.v.be.ps.sc, G.v.be.ps.en, G.v.be.ps.tr, // be present singular
    G.v.be.ps.neg.sc, G.v.be.ps.neg.en, G.v.be.ps.neg.tr, // neg
    G.v.be.tpps.sc, G.v.be.tpps.en, // be third present present singular
    G.v.be.tpps.neg.sc, G.v.be.tpps.neg.en, // neg
    G.v.be.psp.sc, G.v.be.psp.en, // be present singular and plural
    G.v.be.psp.neg.sc, G.v.be.psp.neg.en, G.v.be.psp.neg.tr, // neg
    G.v.be.neg.sc, G.v.be.neg.en, G.v.be.neg.tr // be neg
);
// be end

// v wis
G.v.wis = {
    sc: 'wis',
    pr: ['waz', 'wez', 'wiz', 'wuz'],
    en: [
        ['was', 'had been']
    ],
    sc_alt: 'wes',
    tr: 'wus',
    neg: {
        sc: ['wisna', 'wisnae'],
        en: [
            ['was not', 'wasn\'t', 'had not been']
        ],
        tr: ['wasnae', 'wasna', 'wesna', 'wesnae', 'wiznae', 'wizna', 'wuznae', 'wuzna']
    }
};
G.v.wis.trigs = [].concat(
    G.v.wis.sc, G.v.wis.pr, G.v.wis.en, G.v.wis.sc_alt, G.v.wis.tr, // wis
    G.v.wis.neg.sc, G.v.wis.neg.en, G.v.wis.neg.tr // neg
);
// wis end

// v wis
G.v.war = {
    sc: 'war',
    pr: ['war', 'wir', 'wur'],
    en: [
        ['were', 'had been']
    ],
    neg: {
        sc: ['warna', 'warnae'],
        en: [
            ['were not', 'weren\'t', 'had not been']
        ],
        tr: ['werena', 'werenae', 'wirna', 'wirnae']
    }
};
G.v.war.trigs = [].concat(
    G.v.war.sc, G.v.war.pr, G.v.war.en, G.v.war.tr, // war
    G.v.war.neg.sc, G.v.war.neg.en, G.v.war.neg.tr // neg
);
// wis end

// v dae
G.v.dae = {
    sc: ['dae', 'div'],
    en: 'do',
    pr: ['day', 'dee', 'doo'],
    tr: 'duv',
    neg: {
        sc: ['daena', 'dinna', 'dae', 'divna'],
        sc_alt: ['dinnae', 'divnae'],
        en: [
            ['do not', 'don\'t']
        ],
        tr: ['daenae', 'deh', 'duvnae', 'duvna', 'dinny', 'dinnay']
    },
    ps: { // Present singular
        sc: ['daes', 'dis'],
        en: 'does',
        tr: 'dus',
        neg: {
            sc: ['daesna', 'disna'],
            sc_alt: ['daesnae', 'disnae'],
            en: [
                ['does not', 'doesn\'t']
            ],
            tr: ['duznae', 'dusnae', 'doesnae', 'doesna']
        }
    },
    pt: {
        sc: ['daed', 'did'],
        en: 'did',
        pr: ['did', 'daid', 'dood'],
        neg: {
            sc: ['daedna', 'didna'],
            sc_alt: ['daednae', 'didnae'],
            en: [
                ['did not', 'didn\'t']
            ]
        }
    },
    ptp: {
        sc: ['duin', 'daen'],
        en: 'done',
        pr: ['din', 'deen', 'dayn', 'doon']
    }
};
G.v.dae.trigs = [].concat( // Control display of conjugated 'hae'
    G.v.dae.sc, G.v.dae.en, G.v.dae.pr, // dae
    G.v.dae.neg.sc, G.v.dae.neg.sc_alt, G.v.dae.neg.en, G.v.dae.neg.tr, // dae neg
    G.v.dae.ps.sc, G.v.dae.ps.sc_alt, G.v.dae.ps.en, G.v.dae.ps.tr, // dae present singular
    G.v.dae.ps.neg.sc, G.v.dae.ps.neg.sc_alt, G.v.dae.ps.neg.en, G.v.dae.ps.neg.tr, // dae neg present singular
    G.v.dae.pt.sc, G.v.dae.pt.en, G.v.dae.pt.pr, // dae past tense
    G.v.dae.pt.neg.sc, G.v.dae.pt.neg.sc_alt, G.v.dae.pt.neg.en, // dae neg past tense
    G.v.dae.ptp.sc, G.v.dae.ptp.sc_alt, G.v.dae.ptp.pr // dae past participle
);
// dae end

// v hae
G.v.hae = {
    sc: ['hae', 'hiv'],
    en: 'have',
    pr: ['hae', 'ha', 'a', 'hiv', 'huv', 'hev'],
    neg: {
        sc: ['haena', 'hinna', 'hivna'],
        sc_alt: ['haenae', 'hinnae', 'hivnae'],
        en: [
            ['have not', 'haven\'t']
        ],
        tr: ['huvnae', 'huvna', 'havena', 'havenae']
    },
    ps: { // Present singular
        sc: 'haes',
        sc_alt: 'hes',
        en: 'has',
        pr: ['hez', 'hiz', 'huz'],
        tr: ['his', 'hus'],
        neg: {
            sc: ['haesna', 'haesnae'],
            en: [
                ['has not', 'hasn\'t']
            ],
            tr: ['hesna', 'hisnae', 'hisna', 'hiznae', 'husnae']
        }
    },
    pt: {
        sc: 'haed',
        en: 'had',
        pr: ['haid', 'hed', 'hid', 'hud'],
        neg: {
            sc: ['haedna', 'haednae'],
            en: [
                ['had not', 'hadn\'t']
            ],
            tr: ['hudnae', 'hidnae', 'hidna', 'hudna']
        }
    },
    ptp: {
        sc: ['haed', 'haen'],
        en: 'had',
        sc_alt: 'hed',
        pr: ['haid', 'hed', 'hid', 'hud', 'hain']
    }
};
G.v.hae.trigs = [].concat( // Control display of conjugated 'hae'
    G.v.hae.sc, G.v.hae.en, G.v.hae.pr, // hae
    G.v.hae.neg.sc, G.v.hae.neg.sc_alt, G.v.hae.neg.en, G.v.hae.neg.tr, // hae neg
    G.v.hae.ps.sc, G.v.hae.ps.sc_alt, G.v.hae.ps.en, G.v.hae.ps.pr, G.v.hae.ps.tr, // hae present singular
    G.v.hae.ps.neg.sc, G.v.hae.ps.neg.en, G.v.hae.ps.neg.tr, // hae neg present singular
    G.v.hae.pt.sc, G.v.hae.pt.en, G.v.hae.pt.pr, // hae past tense
    G.v.hae.pt.neg.sc, G.v.hae.pt.neg.en, G.v.hae.pt.neg.tr, // hae neg past tense
    G.v.hae.ptp.sc, G.v.hae.ptp.sc_alt, G.v.hae.ptp.pr // hae past participle
);
// hae end

// ken and knaw triggers
G.v.ken_knaw = {};
G.v.ken_knaw.trigs = ['ken', 'know', 'kenna', 'know not', 'kent', 'kenned', 'knew', 'kentna', 'knew not', 'known', 'knaw', 'knawed', 'knawn'];

// lat triggers
G.v.lat = {};
G.v.lat.trigs = ['allow', 'permit', 'cause', 'make happen', 'luit', 'latten', 'luiten', 'lit', 'lat', 'lit', 'leet', 'löt', 'lüt'];

/**
 * Add verbs (both complex and more simple) to dictionary object
 */

G.dict.push({ // A
        sc: 'accress',
        pt_pp: {
            sc: 'accressed',
            tr: ['increased', 'accrued', 'grown', 'grew']
        },
        en: ['accrue', ['increase', 'grow']],
        gr: ['v', 'obsolete'],
        tr: 'added',
        hl: 'accress',
        or: [
            [G.notes.or.as, 'accress, accresce'],
            ['frae the ' + G.notes.or.rl + ' term', 'accrescere']
        ]
    }, {
        sc: 'adduce',
        en: ['cite as pertinent, quote as evidence'],
        tr: 'pertain',
        hl: 'adduce',
        gr: 'v',
        or: [
            [G.notes.or.as, 'adduce'],
            [G.notes.or.l, 'adūcere']
        ]
    }, {
        sc: 'allocate',
        def: 'tae assign',
        pt: {
            sc: 'allocatit',
            tr: ['allocated', 'assigned']
        },
        pp: {
            sc: 'allocate',
            tr: ['allocated', 'allocatit', 'assigned']
        },
        tr: ['assign', 'appoint'],
        hl: 'assign',
        gr: 'v',
        or: [
            [G.notes.or.as, 'allocat'],
            [G.notes.or.l, 'allocāt-, <span>ptp stem o</span> allocāre']
        ],
        ex: ['Aw students is allocate £100 o prent credit at the stert o ilka semester', 'Resources haes been allocate tae them that’s maist in need']
    }, { // v be
        sc: G.v.be.sc,
        en: G.v.be.en,
        tr: G.v.be.trigs, // Highlighted by default
        hl: [].concat(G.v.be.en, 'to be', 'tae be'),
        gr: 'v'
    }, { // am
        sc: G.v.be.ps.sc,
        en: G.v.be.ps.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.ps.en, G.v.be.ps.tr),
        gr: 'present singular o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // amna
        sc: G.v.be.ps.neg.sc,
        en: G.v.be.ps.neg.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.ps.neg.en, G.v.be.ps.neg.tr),
        gr: 'present singular neg o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // is
        sc: G.v.be.tpps.sc,
        en: G.v.be.tpps.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.tpps.en),
        gr: 'third person present singular o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // isna
        sc: G.v.be.tpps.neg.sc,
        en: G.v.be.tpps.neg.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.tpps.neg.en),
        gr: 'third person present singular neg o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // are
        sc: G.v.be.psp.sc,
        en: G.v.be.psp.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.psp.en, G.v.be.psp.tr),
        gr: 'present singular an plural o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // arena
        sc: G.v.be.psp.neg.sc,
        en: G.v.be.psp.neg.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.psp.neg.en, G.v.be.psp.neg.tr),
        gr: 'present singular an plural neg o v ' + G.utils.addSpan('tae ' + G.v.be.sc)
    }, { // binna
        sc: G.v.be.neg.sc,
        en: G.v.be.neg.en,
        tr: G.v.be.trigs,
        hl: [].concat(G.v.be.neg.en, G.v.be.neg.tr),
        gr: 'neg o v ' + G.utils.addSpan('tae ' + G.v.be.sc) + '; líterar'
    },
    // v be end
    {
        sc: 'big',
        en: 'build',
        pt: {
            sc: ['biggit', 'bug'],
            tr: ['built', 'bigget']
        },
        pp: {
            sc: ['biggit', 'buggen'],
            tr: ['built', 'bigget']
        },
        tr: 'bigg',
        gr: 'v',
        or: [
            [G.notes.or.as, 'big'],
            [G.notes.or.anor, 'byggja']
        ],
        au: 'big'
    }, { // C
        sc: 'cast-ower',
        en: 'review',
        tr: ['cast ower'],
        gr: 'v phr',
        ex: 'Whiles we will cast-ower the policy an mak mair recommends'
    }, {
        sc: 'complouther',
        en: [
            ['mix or associate with'],
            ['agree, coincide or fit in with']
        ],
        pt_pp: {
            sc: 'complouthert'
        },
        tr: ['compluter', 'compluther', 'comploother', 'agree', 'coincide', 'fit in'],
        gr: 'v',
        or: 'see n'
    }, {
        sc: 'comprise',
        en: [
            ['include', 'contain', 'consist of'],
            ['appraise', 'value']
        ],
        tr: 'make up',
        hl: 'comprise',
        gr: 'v',
        or: [
            [G.notes.or.as, 'comprise, compryse, comprize'],
            [G.notes.or.mf, 'compris']
        ]
    }, {
        sc: 'consíder',
        pr: 'conseeder',
        def: 'tae think on, tak intil accoont',
        pt_pp: {
            sc: ['consídert', 'consídered'],
            tr: 'considered'
        },
        tr: ['think on', 'consider'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'consider, considder'],
            [G.notes.or.af, 'considerer'],
            [G.notes.or.l, 'consīderāre']
        ]
    }, {
        sc: 'contrair',
        en: [
            ['oppose', 'contradict', 'go contrary to', 'act or speak against']
        ],
        tr: 'against',
        hl: 'contrair',
        gr: 'v',
        or: 'see n',
        ex: ['He contraired the new regulations the Pairlament haed pitten intae law']
    }, { // D
        sc: 'defaut',
        en: 'to fail to fulfil an obligation or pay a debt',
        tr: 'default',
        gr: 'v',
        or: [
            [G.notes.or.as, 'defalt, defawt, defaut'],
            [G.notes.or.af, 'defaillir']
        ]
    }, {
        sc: 'defeat',
        pr: ['defait', 'defeet'],
        en: 'defeat',
        pt_pp: {
            sc: 'defeat',
            tr: ['defeated', 'defait', 'defeet']
        },
        ex: 'Hibs war defeat by Hearts in the Cup final on Seturday',
        gr: 'v',
        or: [
            [G.notes.or.as, 'defait', 'defett'], G.notes.or.af + ' <span>desfait</span>, ptp o <span>desfaire</span>'
        ]
    }, {
        sc: 'depone',
        en: [
            ['make a sworn statement', 'swear', 'testify', 'give evidence on oath']
        ],
        pt_pp: {
            sc: ['deponed', 'depone’t'],
            tr: ['swore', 'sworn', 'testified']
        },
        tr: 'declare',
        gr: 'v',
        or: [
            [G.notes.or.as, 'depone'],
            [G.notes.or.l, 'dēpōnere']
        ]
    }, {
        sc: 'depute',
        pt_pp: {
            sc: 'depute',
            tr: 'deputised'
        },
        def: 'apynt as depute',
        gr: 'v',
        ex: 'Aaron wis depute tae cover for his manager at the comatee meetin',
        or: [
            [G.notes.or.as, 'depute, deput'],
            [G.notes.or.af, 'deputer']
        ]
    }, {
        sc: 'deburse',
        en: 'disburse',
        def: 'pey oot (siller frae a fund)',
        gr: 'v',
        or: [
            [G.notes.or.as, 'deburs, debours'],
            [G.notes.or.mf, 'desbourser']
        ]
    }, {
        sc: 'develop',
        en: 'develop',
        pt_pp: {
            sc: 'developit',
            tr: 'developed'
        },
        tr: 'mak',
        hl: 'develop',
        gr: 'v'
    }, {
        sc: 'descrive',
        pr: ['descreeve', 'descryve'],
        pt_pp: {
            sc: 'descrived',
            tr: 'described'
        },
        en: 'describe',
        tr: ['descrieve', 'discrieve'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'descrive, descryve, discrive, discryve'],
            [G.notes.or.me, 'descriven']
        ]
    }, {
        sc: 'differ',
        en: [
            ['be dissimilar or distinct'],
            ['quarrel', 'disagree']
        ],
        tr: 'row',
        gr: 'v',
        or: [
            [G.notes.or.as, 'differ'],
            [G.notes.or.mf, 'differer']
        ]
    }, { // E
        sc: 'ettle',
        en: [
            ['intend', 'plan', 'propose'],
            'take aim at', ['attempt', 'venture'],
            'desire very much'
        ],
        pt_pp: {
            sc: 'ettelt',
            tr: ['intended', 'planned', 'proposed', 'attempted', 'ventured']
        },
        tr: ['aim', 'desire', 'ettlin'],
        hl: ['aim', 'desire'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'ettle, ettill'],
            [G.notes.or.anor, 'ætla']
        ]
    }, {
        sc: 'ettlin',
        en: [
            ['endeavouring', 'trying']
        ],
        tr: ['attempting', 'ettle'],
        hl: ['ettlin'],
        gr: ['v'],
        ex: [G.ex.i1, G.ex.g1]
    }, {
        sc: 'ettle sair',
        en: [
            ['try hard', 'strive']
        ],
        pt_pp: {
            sc: 'ettelt sair',
            tr: ['tried hard', 'strove', 'striven', 'strived']
        },
        gr: 'v phr',
        ex: 'She’d ettelt sair tae pass aw her exams',
        ph: true
    }, {
        sc: 'evite',
        pr: ['evite', 'eveet'],
        en: [
            ['avoid', 'escape', 'shun', 'evade']
        ],
        pt_pp: {
            sc: 'evitit',
            tr: ['avoided', 'escaped', 'shunned', 'evaded', 'evited']
        },
        gr: 'v',
        or: [
            [G.notes.or.as, 'evit(e), eveit'],
            [G.notes.or.f, 'éviter'],
            [G.notes.or.l, 'ēvītāre']
        ],
        ex: 'He tried tae evite bein liftit by the polis'
    }, {
        sc: ['examine', 'exaimine'],
        pt_pp: {
            sc: ['examint', 'exaimint'],
            tr: 'examined'
        },
        en: [
            ['inspect', 'question', 'investigate']
        ],
        gr: 'v',
        or: [
            [G.notes.or.as, 'examin, exemyn'],
            [G.notes.or.mf, 'examiner'],
            [G.notes.or.l, 'exāmināre']
        ]
    },
    // v gae
    { // v gae
        sc: G.v.gae.sc,
        en: G.v.gae.en,
        tr: G.v.gae.trigs,
        hl: [].concat(G.v.gae.sc, G.v.gae.tr), // Overrides tr highlighting above, as here we don't want all the tr words being highlighted
        gr: 'v'
    }, { // v gae neg
        sc: G.v.gae.neg.sc,
        en: G.v.gae.neg.en,
        tr: G.v.gae.trigs,
        hl: [].concat(G.v.gae.neg.sc, G.v.gae.neg.tr),
        gr: 'neg o ' + G.v.gae.meta.gr_hw
    }, { // v gae neg third person singular
        sc: G.v.gae.neg.tps.sc,
        en: G.v.gae.neg.tps.en,
        tr: G.v.gae.neg.tps.tr,
        hl: [].concat(G.v.gae.neg.tps.sc, G.v.gae.neg.tps.tr),
        gr: 'neg third person singular o ' + G.v.gae.meta.gr_hw
    }, { // v gae pt
        sc: G.v.gae.pt.sc,
        en: G.v.gae.pt.en,
        tr: G.v.gae.trigs, // So this is triggered when 'go' is entered
        hl: G.v.gae.pt.tr, // Which trigger words should cause the headwords to be highlighted
        gr: 'pt o ' + G.v.gae.meta.gr_hw
    }, { // v gae pt neg
        sc: G.v.gae.pt.neg.sc,
        en: G.v.gae.pt.neg.en,
        tr: G.v.gae.trigs,
        hl: G.v.gae.pt.neg.sc,
        gr: 'neg pt o ' + G.v.gae.meta.gr_hw
    }, { // v gae pp
        sc: G.v.gae.pp.sc,
        en: G.v.gae.pp.en,
        tr: G.v.gae.trigs,
        hl: G.v.gae.pp.tr,
        gr: 'pp o ' + G.v.gae.meta.gr_hw
    }, { // v gae -ing form
        sc: G.v.gae.ing.sc,
        en: G.v.gae.ing.en,
        tr: G.v.gae.trigs,
        hl: G.v.gae.ing.tr
    }, { // v Third person singular
        sc: G.v.gae.tps.sc,
        en: G.v.gae.tps.en,
        tr: G.v.gae.trigs,
        hl: G.v.gae.tps.sc,
        gr: 'third person singular o ' + G.v.gae.meta.gr_hw

    },
    // v gae end
    // v gie
    { // v gie
        sc: G.v.gie.sc,
        en: G.v.gie.en,
        pr: G.v.gie.pr,
        tr: G.v.gie.trigs,
        hl: [].concat(G.v.gie.sc, G.v.gie.pr),
        gr: 'v',
        au: 'gie',
        or: [
            [G.notes.or.as, 'give, gyve']
        ]
    }, { // v gie neg
        sc: G.v.gie.neg.sc,
        en: G.v.gie.neg.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.neg.sc,
        gr: 'neg o ' + G.v.gie.meta.gr_hw
    }, { // v gae neg third person singular
        sc: G.v.gie.neg.tps.sc,
        en: G.v.gie.neg.tps.en,
        tr: G.v.gie.trigs,
        hl: [].concat(G.v.gie.neg.tps.sc, G.v.gie.neg.tps.tr),
        gr: 'neg third person singular o ' + G.v.gie.sc
    }, { // v gie pt
        sc: G.v.gie.pt.sc,
        en: G.v.gie.pt.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.pt.sc,
        gr: 'pt o ' + G.v.gie.meta.gr_hw
    }, { // v gie pt neg
        sc: G.v.gie.pt.neg.sc,
        en: G.v.gie.pt.neg.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.pt.neg.sc,
        gr: 'neg pt o ' + G.v.gie.meta.gr_hw
    }, { // v gie pp
        sc: G.v.gie.pp.sc,
        en: G.v.gie.pp.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.pp.sc,
        gr: 'pp o ' + G.v.gie.meta.gr_hw
    }, { // v gie -ing form
        sc: G.v.gie.ing.sc,
        en: G.v.gie.ing.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.ing.tr
    }, { // v Third person singular
        sc: G.v.gie.tps.sc,
        en: G.v.gie.tps.en,
        tr: G.v.gie.trigs,
        hl: G.v.gie.tps.sc,
        gr: 'third person singular o ' + G.v.gie.meta.gr_hw

    },
    // v gie end
    {
        sc: 'compone',
        pt_pp: {
            sc: 'componed',
            tr: ['composed', 'componit', 'compounded', 'combined', 'settled', 'calmed']
        },
        en: [
            ['come to an agreement', 'settle a dispute with payment'],
            ['compound', 'combine'],
            'compose in speech or writing',
            'compound a payment for a certain sum',
            'compose or calm oneself'
        ],
        or: [
            [G.notes.or.as, 'compone'],
            [G.notes.or.l, 'compōnere']
        ],
        tr: ['compose', 'calm', 'settle'],
        gr: ['v', 'merkit obsolete in CSD2']
    }, {
        sc: 'compone',
        pt_pp: {
            sc: 'componed',
            tr: ['composed', 'componit']
        },
        def: 'write or create (a wark o airt, inspecially muisic or poyetry)',
        tr: ['compose', 'write'],
        hl: 'compose',
        gr: ['v'],
        or: [
            'pairt archaism, pairt protologism, frae the ' + G.notes.or.as + ' <span>compone</span> ‘tae mak by pittin thegither, tae compose; create in speak or writin.’ Henryson wrate: ‘Of thir sex … fyve hevynly symphonyis Componyt ar,’ whaur <span>symphonyis</span> = ‘a harmonious muisical sound’',
            [G.notes.or.l, 'compōnere']
        ]
    }, { // dae
        sc: G.v.dae.sc,
        pr: G.v.dae.pr,
        en: G.v.dae.en,
        tr: G.v.dae.trigs,
        hl: G.v.dae.sc,
        gr: 'v'
    }, { // dae neg
        sc: G.v.dae.neg.sc,
        sc_alt: G.v.dae.neg.sc_alt,
        pr: G.v.dae.neg.pr,
        en: G.v.dae.neg.en,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.neg.sc, G.v.dae.neg.tr),
        gr: 'neg o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', ')),
        ex: 'I dae ken'
    }, { // dae present singular
        sc: G.v.dae.ps.sc,
        en: G.v.dae.ps.en,
        pr: G.v.dae.ps.pr,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.ps.sc, G.v.dae.ps.tr),
        gr: 'present singular o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', '))
    }, { // dae present singular neg
        sc: G.v.dae.ps.neg.sc,
        sc_alt: G.v.dae.ps.neg.sc_alt,
        en: G.v.dae.ps.neg.en,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.ps.neg.sc, G.v.dae.ps.neg.tr),
        gr: 'neg present singular o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', '))
    }, { // dae past tense
        sc: G.v.dae.pt.sc,
        pr: G.v.dae.pt.pr,
        en: G.v.dae.pt.en,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.pt.sc),
        gr: 'pt o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', '))
    }, { // dae neg past tense
        sc: G.v.dae.pt.neg.sc,
        sc_alt: G.v.dae.pt.neg.sc_alt,
        en: G.v.dae.pt.neg.en,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.pt.neg.sc, G.v.dae.pt.neg.tr),
        gr: 'neg pt o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', '))
    }, { // dae past par
        sc: G.v.dae.ptp.sc,
        sc_alt: G.v.dae.ptp.sc_alt,
        en: G.v.dae.ptp.en,
        pr: G.v.dae.ptp.pr,
        tr: G.v.dae.trigs,
        hl: [].concat(G.v.dae.ptp.sc, G.v.dae.ptp.pr),
        gr: 'pp o the v ' + G.utils.addSpan('tae ' + G.v.dae.sc.join(', '))
    }, {
        sc: 'jalouse',
        en: ['suspect', ['suppose', 'guess', 'surmise']],
        pr: 'jaLooz',
        pt: {
            sc: 'jaloused',
            tr: ['suspected', 'supposed', 'guessed', 'surmised', 'figured']
        },
        gr: 'v',
        tr: ['jaloose', 'assume', 'assumed', 'figure'],
        hl: ['jalouse', 'jaloose', 'figure'],
        or: [
            'this uissage first appears in ' + G.notes.or.lms, [G.notes.or.f, 'jalouser']
        ],
        ex: [G.ex.y, G.ex.z]
    }, {
        sc: 'dounlaid',
        pt: {
            sc: 'dounlaidit',
            en: 'downloaded',
            tr: 'doonloadit'
        },
        def: '<em>v</em> copy data frae ae computer system til anither, for ordinar ower the internet; <em>n</em> the data (file) dounlaidit',
        pr: 'doonlaid',
        gr: ['v', 'n'],
        tr: ['doonload', 'download'],
        or: [
            ['Scots <em>doun</em> + Scots <em>laid</em>, efter ' + G.notes.or.mode, 'download']
        ]
    }, {
        sc: 'edifee',
        def: 'instruct, enlichten',
        tr: ['edify', 'instruct', 'enlichten', 'enlighten', 'teach'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'edify, edifie'],
            [G.notes.or.mf, 'edifier'],
            [G.notes.or.l, 'aedificāre']
        ]
    }, {
        sc: 'effeir',
        pr: 'iFeer',
        en: [
            ['belong to', 'pertain to', 'be appropriate to', 'be fitting or proper']
        ],
        pt_pp: {
            sc: 'effeirt',
            tr: ['belonged to', 'pertained to', 'related to', 'corresponded to', 'concerned', 'referred to', 'applied to', 'applicable to', 'belonged', 'pertained', 'related', 'corresponded', 'referred', 'applied', 'applicable', 'belonged']
        },
        gr: ['v', 'formal'],
        tr: ['belong', 'pertain', 'effeirin tae', 'effeirin til', 'applicable to', 'apply to', 'relate to', 'correspond to', 'concern', 'about', 'refer to'],
        or: [
            [G.notes.or.as, 'affer(e), effere'],
            [G.notes.or.an + ', ' + G.notes.or.af, 'aferir']
        ],
        ex: 'The regulations effeir til hoose biggin'
    }, {
        sc: ['effeirin tae/til'],
        pr: ['iFeerin tae', 'iFeerin til'],
        en: [
            ['pertaining to', 'belonging to'],
            ['in relation to', 'in proportion to', 'corresponding to']
        ],
        gr: ['v phr', 'formal'],
        tr: ['effeir', 'relating to', 'according to', 'applicable to', 'concerning', 'about', 'referring to'],
        hl: ['effeirin tae', 'effeirin til', 'relating to', 'applicable to', 'concerning', 'referring to'],
        or: 'see v <span>effeir</span>',
        ex: 'The comatee spak anent maiters effeirin til halth policy',
        ph: true
    }, {
        sc: 'gar',
        pt_pp: {
            sc: ['gart', 'garred'],
            tr: ['made', 'caused', 'forced', 'compelled', 'required', 'makkit']
        },
        def: ['cause something tae be duin', 'mak a body or thing dae something'],
        tr: ['make', 'mak', 'cause', 'force', 'compel', 'require'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'ger, gar'],
            [G.notes.or.anor, 'gera']
        ],
        ex: ['It gars ye think', G.ex.u, 'The court gart the company provide mair wittins']
    }, {
        sc: 'gie bield tae/til',
        en: 'protect',
        tr: ['gie bield tae', 'gie bield til'],
        gr: 'v phr',
        ex: 'The 1992 Chairter gies bield til Europe’s regional or smaw leids',
        ph: true
    }, {
        sc: 'haud',
        pr: ['haud', 'hod', 'hud', 'had'],
        en: [
            ['have', 'keep in the hand', 'hold onto', 'possess'],
            ['confine', 'detain', 'hinder', 'restrain'],
            ['continue as before'],
            'arrange an event', ['continue', 'proceed', 'keep to a path or route'],
            ['observe', 'adhere to', 'maintain'],
            ['contain', 'keep within'],
            ['restrain oneself', 'prevent']
        ],
        pt: {
            sc: ['haudit', 'held', 'huild'],
            tr: 'held'
        },
        pp: {
            sc: 'hauden',
            tr: 'held'
        },
        tr: ['hauden', 'hold'],
        hl: ['haud', 'hold'],
        gr: 'v',
        ex: [G.ex.z, 'The neist comatee meetin will be hauden in Mey']
    }, {
        sc: 'hauden',
        en: 'be obliged or required to do something',
        tr: ['obliged', 'required'],
    }, {
        sc: 'haud aff',
        en: 'keep off or away',
        tr: ['keep off', 'keep away'],
        gr: 'phrasal v'
    }, {
        sc: 'haud at',
        en: [
            ['persist in', 'keep at']
        ],
        tr: ['haud at', 'persist at', 'persevere at'],
        gr: 'phrasal v'
    }, {
        sc: 'haud awa',
        en: [
            ['keep away', 'keep out or off'],
            ['continue on one\'s way', 'go away']
        ],
        tr: ['keep out', 'keep off', 'continue'],
        gr: 'phrasal v'
    }, {
        sc: 'haud for',
        en: [
            ['aim at', 'make for']
        ],
        gr: 'phrasal v'
    }, {
        sc: 'haud forrit',
        en: 'continue to improve (e.g. in health, or in terms of the degree of one’s accomplishment at performing a given job, task or craft)',
        tr: 'continue to improve',
        gr: 'phrasal v'
    }, {
        sc: 'haud gaun',
        en: [
            ['keep going', 'continue']
        ],
        gr: 'phrasal v'
    }, {
        sc: 'haud haul',
        en: [
            ['offer resistance', 'prop', 'support']
        ],
        gr: 'phrasal v'
    }, {
        sc: 'haud in',
        en: [
            ['confine', 'retain', 'restrain', 'keep in order'],
            ['save', 'economize', 'be miserly']
        ],
        gr: 'phrasal v'
    }, {
        sc: 'haud in aboot',
        en: [
            ['keep in order', 'restrain', 'control'],
            ['bring', 'come closer']
        ],
        gr: ['phrasal v']
    }, {
        sc: 'haud in wi',
        en: [
            ['keep in with', 'curry favour with'],
        ],
        gr: ['phrasal v']
    }, {
        sc: 'haud on',
        en: [
            ['carry on', 'continue'],
        ],
        gr: ['phrasal v']
    }, {
        sc: 'haud on',
        en: 'stop',
        gr: ['imp phrasal v']
    }, { // I
        sc: 'inbring',
        pt_pp: {
            sc: 'inbrocht',
            tr: ['imported', 'importit', 'conveyed']
        },
        en: [
            ['bring to or into a place', 'convey', 'import']
        ],
        tr: ['bring to a place', 'bring into a place'],
        gr: 'v',
        or: [
            [G.notes.or.ae, 'inbrengan']
        ],
        ex: [G.ex.l, G.ex.s]
    }, {
        sc: 'innovate',
        pt: {
            sc: 'innovatit',
            tr: 'innovated'
        },
        pp: {
            sc: 'innovate',
            tr: 'innovated'
        },
        en: [
            ['alter or revise (established practice or the status quo)', 'introduce something new']
        ],
        tr: ['alter', 'revise'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'innovat, innovate'],
            G.notes.or.l + ' <em>innovāt-</em>, ptp stem o <em>innovāre</em>'
        ],
        ex: ['She aye likit tae innovate in her wark']
    }, {
        sc: 'interpone',
        en: 'interpose',
        pt_pp: {
            sc: ['interponed', 'interpone’t'],
            tr: ['interposed', 'intervened', 'interjected', 'interrupted', 'interruptit']
        },
        tr: ['intervene', 'interject', 'interrupt'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'interpone'],
            [G.notes.or.l, 'interpõnere']
        ],
        inf: 'Uisses the day are limitit tae Scots law — aft-times in the phrase <span>interpone authority to</span> — but it wis uised mair braidly in Aulder Scots'
    }, {
        sc: 'introduce',
        pt_pp: {
            sc: 'introduced',
            tr: 'introduced',
        },
        en: 'introduce',
        gr: 'v'
        // or:
    }, {
        sc: 'ken',
        en: 'know',
        neg: {
            sc: 'kenna',
            tr: 'know not'
        },
        tr: G.v.ken_knaw.trigs,
        hl: 'ken',
        gr: 'v',
        ex: [G.ex.h, G.ex.c]
    }, {
        sc: ['kent', 'kenned'],
        en: ['knew'],
        neg: {
            sc: 'kentna',
            tr: G.v.ken_knaw.trigs
        },
        tr: G.v.ken_knaw.trigs,
        hl: ['kent', 'kenned'],
        gr: 'pt o v ' + G.utils.addSpan('tae ken'),
        ex: 'Tammas kentna what tae dae'
    }, {
        sc: 'kent',
        en: 'known',
        gr: ['adj, an ptp o v ' + G.utils.addSpan('tae ken')],
        ex: 'Brian is a weel kent face on the Edinburgh jazz scene',
        tr: G.v.ken_knaw.trigs,
        hl: 'kent'
    }, {
        sc: 'knaw',
        en: 'know',
        pt: {
            sc: ['knew', 'knawed'],
            tr: ['knew']
        },
        pp: {
            sc: 'knawn',
            tr: 'known'
        },
        tr: G.v.ken_knaw.trigs,
        ex: G.ex.b,
        hl: 'knaw',
        gr: 'v'
    }, { // L
        sc: 'laid',
        en: 'load',
        gr: ['v', 'n'],
        or: [
            [G.notes.or.as, 'laid, lade']
        ]
    }, {
        sc: 'lat',
        en: 'let',
        pr: ['lat', 'lit'],
        tr: G.v.lat.trigs,
        hl: ['allow', 'permit', 'cause', 'make happen'],
        gr: 'v',
        ex: ['Lat’s hae a drink efter wark', G.ex.d],
        or: [
            [G.notes.or.as, 'lat, let, lete'],
            [G.notes.or.ae, 'lǽtan']
        ]
    }, {
        sc: 'lair',
        en: 'teach',
        gr: 'v',
        tr: ['instruct', 'learn'],
        pt_pp: {
            sc: ['lairt', 'laired'],
            tr: ['taught', 'instructed']
        }
    }, {
        sc: 'lear',
        en: [
            ['teach', 'instruct'],
            'learn'
        ],
        gr: 'v',
        tr: 'instruct',
        pt_pp: {
            sc: ['leart', 'leared'],
            tr: ['taught', 'instructed', 'learned']
        }
    }, {
        sc: 'learn',
        en: [
            ['teach', 'instruct']
        ],
        tr: ['lair', 'lear'],
        hl: ['learn', 'lair', 'lear'],
        pt_pp: {
            sc: 'learnt',
            tr: ['taught', 'instructed', 'educated']
        },
        gr: 'v',
        au: 'learn'
    }, {
        sc: 'licht',
        en: 'light',
        pt_pp: {
            sc: ['lichtit'],
            tr: 'lit'
        },
        gr: 'v',
        or: [
            [G.notes.or.as, 'licht, lycht, light'],
            [G.notes.or.ae, 'līhtan']
        ],
        au: 'licht'
    }, {
        sc: 'luit',
        en: 'let',
        tr: G.v.lat.trigs,
        hl: 'luit',
        pr: ['lit', 'leet', 'löt', 'lüt'],
        gr: 'pt o the v <span>tae lat</span>',
        ex: G.ex.e
    }, {
        sc: ['luiten', 'latten'],
        en: 'let',
        tr: G.v.lat.trigs,
        hl: ['latten', 'luiten'],
        gr: 'ptp o the v <span>tae lat</span>',
        ex: 'John haed been luiten doun by his colleague'
    }, {
        sc: 'lat see',
        en: 'produce',
        gr: 'v phr',
        ph: true
    }, {
        sc: 'mak',
        en: 'make',
        tr: ['manufacture', 'create', 'compose', 'compel'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'mak'],
            [G.notes.or.ae, 'macian']
        ]
    }, { // M
        sc: 'maun',
        pr: ['maun', 'mon', 'man', 'mun'],
        en: 'must',
        neg: {
            sc: ['maunna', 'maunnae'],
            tr: ['must not', 'mustn\'t']
        },
        gr: ['v'],
        or: [
            [G.notes.or.as, 'man'],
            [G.notes.or.anor, 'muna > man']
        ],
        ex: ['Ye maun be jokin!', 'He maunna hae been able tae come', 'The essay maunna be ower 3,000 wirds']
    }, {
        sc: 'mind',
        pt: {
            sc: 'mindit',
            tr: ['reminded', 'remembered', 'recollected', 'called to mind', 'myndit']
        },
        en: ['remind', ['remember', 'recollect', 'call to mind']],
        gr: 'v',
        or: [
            [G.notes.or.as, 'minde, mynd(e)'],
            [G.notes.or.ae, 'mynd']
        ],
        au: 'mind'
    }, {
        sc: 'uplaid',
        tr: 'upload',
        pt: {
            sc: 'uplaidit',
            en: 'uploaded',
            tr: 'uploadit'
        },
        def: '<em>v</em> copy data frae ae computer system til anither, for ordinar til a server, an aften ower the internet; <em>n</em> the data (file) uplaidit',
        gr: ['v', 'n'],
        or: [
            ['Scots <em>up</em> + Scots <em>laid</em>, efter ' + G.notes.or.mode, 'upload']
        ]
    }, { // F
        sc: 'fankle',
        en: [
            ['tangle', 'mix up'], 'become tangled', ['trap', 'ensnare'],
            ['stumble', 'fumble']
        ],
        pt_pp: {
            sc: 'fankelt',
            tr: ['tangled', 'mixed up', 'trapped', 'ensnared', 'stumbled', 'fumbled']
        },
        gr: 'v',
        or: 'see n'
    }, {
        sc: ['fash'],
        en: [
            ['irritate', 'annoy', 'anger', 'inconvenience'],
            ['take trouble over', 'take pains with'],
            ['vex', 'bother'],
            ['fret']
        ],
        pt_pp: {
            sc: 'fasht',
            tr: [
                ['irritated', 'annoyed', 'angered', 'inconvenienced', 'troubled', 'vexed', 'bothered', 'fretted', 'fashed']
            ]
        },
        neg: {
            sc: 'fashna',
            tr: ['fash not', 'fash na']
        },
        gr: 'v',
        or: [
            [G.notes.or.ms, 'fasch, fash'],
            [G.notes.or.mf, 'faschier']
        ],
        ex: ['Dinna fash yersel', 'I wis sair fasht aboot the job interview', G.ex.d]
    }, {
        sc: 'fecht',
        en: 'fight',
        tr: ['ficht', 'struggle', 'battle'],
        pt_pp: {
            sc: 'focht',
            tr: ['fought', 'fechtit']
        },
        gr: 'v',
        or: [
            [G.notes.or.as, 'fecht, feicht'],
            [G.notes.or.ae, 'feohtan']
        ]
    }, {
        sc: 'fesh-on',
        en: [
            ['bring forward', 'advance', 'bring to maturity', 'develop']
        ],
        pt_pp: {
            sc: 'fesht-on',
            tr: ['feshed on', 'fesht on', 'brought forward', 'advanced', 'brought to maturity', 'developed']
        },
        tr: 'fesh on',
        gr: 'v',
        ex: 'The report recommendit we fesh-on a national policy'
    }, { // G
        sc: 'greet',
        en: ['cry', ['lament', 'complain']],
        tr: ['howl, sob', 'weep', 'whine', 'grumble', 'wheenge'],
        pt: {
            sc: ['grat', 'gret'],
            tr: ['cried', 'sobbed', 'wept', 'howled', 'wheenged', 'lamented', 'complained']
        },
        pp: {
            sc: ['grat', 'gret', 'grutten'],
            tr: ['cried', 'sobbed', 'wept', 'howled', 'wheenged', 'lamented', 'complained']
        },
        gr: 'v',
        or: [
            [G.notes.or.as, 'grete, greit'],
            [G.notes.or.ae, 'grētan']
        ],
        ex: 'Ye dinna need tae greet aboot it!',
        au: 'greet'
    }, { // Tak -ing ending
        sc: 'greetin',
        en: 'crying',
        tr: ['greeting', 'weeping'],
        ex: 'The film haed me greetin',
        gr: 'pres pple o the v <span>tae greet</span>',
        or: [
            [G.notes.or.as, 'gretand']
        ]
    },
    // H
    { // hae
        sc: G.v.hae.sc,
        pr: G.v.hae.pr,
        en: G.v.hae.en,
        tr: G.v.hae.trigs,
        hl: G.v.hae.sc,
        gr: 'v',
        ex: [G.ex.a1, G.ex.c1],
        au: 'hae'
    }, { // hae neg
        sc: G.v.hae.neg.sc,
        sc_alt: G.v.hae.neg.sc_alt,
        pr: G.v.hae.neg.pr,
        en: G.v.hae.neg.en,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.neg.sc, G.v.hae.neg.tr),
        gr: 'neg o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', ')),
        ex: G.ex.b1
    }, { // hae present singular
        sc: G.v.hae.ps.sc,
        sc_alt: G.v.hae.ps.sc_alt,
        en: G.v.hae.ps.en,
        pr: G.v.hae.ps.pr,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.ps.sc, G.v.hae.ps.tr),
        gr: 'present singular o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', '))
    }, { // hae present singular neg
        sc: G.v.hae.ps.neg.sc,
        en: G.v.hae.ps.neg.en,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.ps.neg.sc, G.v.hae.ps.neg.tr),
        gr: 'neg present singular o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', '))
    }, { // hae past tense
        sc: G.v.hae.pt.sc,
        pr: G.v.hae.pt.pr,
        en: G.v.hae.pt.en,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.pt.sc),
        gr: 'pt o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', ')),
        ex: G.ex.d1
    }, { // hae neg past tense
        sc: G.v.hae.pt.neg.sc,
        en: G.v.hae.pt.neg.en,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.pt.neg.sc, G.v.hae.pt.neg.tr),
        gr: 'neg pt o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', '))
    }, { // hae past par
        sc: G.v.hae.ptp.sc,
        en: G.v.hae.ptp.en,
        pr: G.v.hae.ptp.pr,
        tr: G.v.hae.trigs,
        hl: [].concat(G.v.hae.ptp.sc, G.v.hae.ptp.pr),
        gr: 'pp o the v ' + G.utils.addSpan('tae ' + G.v.hae.sc.join(', ')),
        ex: G.ex.e1
    }, {
        sc: 'haik',
        en: [
            ['trek', 'rove', 'roam', 'wander aimlessly', 'trudge'], 'carry or drag with difficulty'
        ],
        gr: 'v',
        or: [
            [G.notes.or.ms, 'haik']
        ]
    }, {
        sc: 'hoose',
        def: ['tae provide wi a hoose', 'tae bouk guids or craps'],
        tr: ['houss', 'hoose', 'house'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'hous, huse, hows'],
            [G.notes.or.ae, 'hūsian']
        ],
        ex: ['We can hoose the kye in the byre the nicht']
    }, { // O
        sc: 'ocht',
        en: 'ought',
        gr: 'v'
    }, {
        sc: 'ower',
        pr: ['uower', 'oar', 'oor', 'err'],
        pt_pp: {
            sc: ['owert, owered']
        },
        en: [
            ['overpower', 'take control', 'regulate or manage oneself']
        ],
        tr: ['over', 'owre'],
        hl: ['ower', 'owre'],
        gr: 'v',
        or: 'see adv'
    }, {
        sc: 'owergie',
        en: [
            ['give up', 'renounce', 'resign', 'surrender property']
        ],
        tr: ['owregie', 'relinquish', 'surrender'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'overgive, ourgive']
        ]
    }, { // P
        sc: 'pit',
        en: 'put',
        pt: {
            sc: ['pat', 'pit'],
            tr: 'put'
        },
        pp: {
            sc: ['pat', 'pit', 'pitten', 'putten'],
            tr: 'put'
        },
        gr: 'v',
        or: [
            [G.notes.or.as, 'pit'],
            [G.notes.or.ae, 'pȳtan']
        ],
        ex: ['Jamie pit the cat oot', G.ex.f, 'Iona haed pitten forrit mony guid ideas']
    }, {
        sc: 'pit forrit',
        en: 'introduce',
        gr: 'v phr'
    }, {
        sc: 'proceed',
        en: 'proceed',
        gr: 'v',
        tr: ['go', 'gae', 'gang', 'ging'],
        or: [
            [G.notes.or.as, 'proced(e), proceid'],
            [G.notes.or.me + ' an ' + G.notes.or.eme, 'proced(e), proceede'],
            [G.notes.or.f, 'procéder'],
            [G.notes.or.l, 'procéder']
        ]
    }, {
        sc: 'propone',
        pt_pp: {
            sc: ['proponed', 'propone’t'],
            tr: ['suggested', 'proposed', 'put forward']
        },
        def: [
            ['pit forrit for consíderation', 'suggest'],
            ['<span>law</span> pit forrit or state (a plea) in a court']
        ],
        en: 'propose',
        tr: 'bring forward',
        gr: 'v',
        or: [
            [G.notes.or.as, 'propone'],
            [G.notes.or.l, 'prōpōnere']
        ]
    }, { // T
        sc: 'tak',
        en: 'take',
        pt: {
            sc: 'teuk',
            tr: 'took'
        },
        pp: {
            sc: ['taen', 'takken', 'teuken'],
            tr: ['taken', 'tane', 'takkin', 'tooken', 'tookin']
        },
        pr: ['tak', 'take'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'tak'],
            G.notes.or.ae + ' <span>tacan</span> frae the ' + G.notes.or.anor + ' <span>taka</span>'
        ],
        ex: 'The roaster’s comment haed been taen doun afore I could repone til him'
    }, { // Tak -ing ending
        sc: ['takkin', 'taein'],
        en: 'taking',
        tr: ['take', 'teuk', 'took', 'taen', 'takken', 'teuken', 'taken', 'tane', 'takkin', 'tooken', 'tookin'],
        ex: 'I wis takkin the dug for a walk whan it stertit smirrin',
        gr: 'pres pple o the v <span>tae tak</span>'
    }, {
        sc: 'tak on',
        en: 'adopt',
        tr: {
            sc: 'teuk on',
            tr: 'adopted'
        },
        pp: {
            sc: ['taen on', 'takken on', 'teuken on'],
            tr: 'adopted'
        },
        gr: 'v phr',
        ex: 'The Chairter wis taen on in 1992',
        ph: true
    }, {
        sc: 'teach',
        en: 'teach',
        gr: 'v'
    }, {
        sc: 'tred',
        en: 'trade',
        gr: 'v'
    }, {
        sc: 'tuim',
        pr: ['tim', 'teem', 'toom', 'taim'],
        pt_pp: {
            sc: 'tuimt',
            tr: ['tuimed', 'emptied', 'emptied out',
                'discharged', 'drained', 'gushed', 'poured'
            ]
        },
        en: 'empty',
        tr: ['empty', 'gush', 'discharge', 'drain'],
        gr: 'v',
        or: 'frae the adj',
        ex: 'He tuimt the watter doun the cundie',
        au: 'tuim'
    }, { // R
        sc: 'rax',
        en: [
            'stretch', ['make a great effort', 'overexert', 'strain a part of yourself', 'rouse yourself'], 'deal (a person) a blow', ['lengthen by stretching', 'pull out', 'extend something to its full reach or capacity', 'be flexible or accommodating'], 'hang a person', ['reach out or over the hand or arm', 'give a person your hand'], 'extend, raise up the head or eyes in order to look or listen', 'hand a person an object', 'sprain a limb', 'reach for, stretch out to take or grasp something'
        ],
        gr: 'v',
        tr: ['hit', 'lengthen', 'rouse', 'reach', 'hand', 'sprain', 'hang'],
        pt_pp: {
            sc: ['raxed', 'raxt'],
            tr: ['hit', 'handed', 'reached', 'stretched', 'overexterted', 'strained', 'sprained', 'roused', 'lengthened', 'extended', 'accomodated', 'hanged']
        },
        or: [
            [G.notes.or.as, 'rax, raux, wrax'],
            [G.notes.or.ae, 'raxan']
        ],
        ex: [G.ex.f1, 'I raxt mysel sair pittin in the byler']
    }, {
        sc: 'redd',
        en: [
            ['clear', 'rid'], 'clarify'
        ],
        gr: 'v'
    }, {
        sc: 'remeid',
        en: [
            ['remedy', 'redress']
        ],
        tr: ['remeed', 'rectify', 'cure'],
        gr: 'v',
        or: [
            [G.notes.or.as, 'remed(e)'],
            ['frae the noun or a reduced mak o ' + G.notes.or.an, 'remedier']
        ]
    }, {
        sc: ['set furth', 'furthset'],
        pt: {
            sc: ['set furth', 'furthset'],
            tr: 'published'
        },
        pp: {
            sc: ['set furth', 'setten furth'],
            tr: 'published'
        },
        en: 'publish',
        gr: 'v phr, v',
        or: [G.notes.or.as + ' haes <span>furthset</span> ‘tae set furth or forrit; tae advance’ an <span>furthsettar, furthsetter</span>'],
        ex: 'She haes setten furth a pose o unco bonnie poyetry'
    }, { // S
        sc: 'skair',
        en: 'share',
        gr: ['v', 'n'],
        tr: 'skare',
        or: [
            [G.notes.or.as, 'skar, scar(e), schare'],
            ['?' + G.notes.or.anor, 'skera'],
            ['?' + G.notes.or.md, 'scare, scaer']
        ]
    }, {
        sc: 'swither',
        en: [
            ['doubt', 'falter', 'hesitate', 'dither']
        ],
        tr: ['ditter', 'doiter', 'unsure'],
        hl: 'swither',
        gr: 'v',
        ex: 'Dinna swither, min — haud gaun!',
        or: ['doutsome; first kythes (as a verb) in ' + G.notes.or.ms]
    }, { // U
        sc: 'uise',
        pr: ['yöz', 'yüz', 'öz', 'yaiz', 'ees'],
        en: 'use',
        tr: ['yaise', 'uiss', 'yiss', 'yaize'],
        hl: ['yaise', 'yaize', 'uise', 'yaiz', 'ees'],
        gr: 'v'
    }, {
        sc: 'upcast',
        en: [
            ['calculate', 'reckon', 'estimate']
        ],
        gr: 'v'
    }, {
        sc: 'upsteer',
        sc_alt: 'upsteir',
        en: [
            ['stir up', 'throw into turmoil', 'stimulate', 'encourage', 'arouse', 'incite']
        ],
        tr: 'rouse',
        gr: 'v'
    }, {
        sc: 'wirk',
        pr: 'wirk, wurk',
        pt_pp: {
            sc: 'wrocht',
            tr: ['worked', 'workit', 'made', 'built', 'manufactured', 'biggit']
        },
        tr: ['labour', 'labor', 'toil', 'wark'],
        hl: 'wirk',
        en: 'work',
        gr: 'v',
        or: [
            [G.notes.or.as, 'wirk, wyrk'],
            [G.notes.or.ae, 'wyrcan']
        ],
        ex: ['She haed wrocht hersel sair tae win the company the contract', 'The team haed been wirkin on the project for a guid while']
    },
    // v wis
    {
        sc: G.v.wis.sc,
        sc_alt: G.v.wis.sc_alt,
        pr: G.v.wis.pr,
        en: G.v.wis.en,
        tr: [].concat(G.v.war.trigs, G.v.wis.trigs),
        hl: [].concat(G.v.wis.sc, G.v.wis.pr, G.v.wis.tr),
        gr: 'v'
    }, { // wis neg
        sc: G.v.wis.neg.sc,
        en: G.v.wis.neg.en,
        tr: [].concat(G.v.war.trigs, G.v.wis.trigs),
        hl: [].concat(G.v.wis.neg.sc, G.v.wis.neg.tr),
        gr: ['neg o v ' + G.utils.addSpan(G.v.wis.sc)]
    },
    // v wis end
    // v war
    {
        sc: G.v.war.sc,
        pr: G.v.war.pr,
        en: G.v.war.en,
        tr: [].concat(G.v.war.trigs, G.v.wis.trigs),
        hl: [].concat(G.v.war.sc, G.v.war.pr),
        gr: 'v'
    }, { // war neg
        sc: G.v.war.neg.sc,
        en: G.v.war.neg.en,
        tr: [].concat(G.v.war.trigs, G.v.wis.trigs),
        hl: [].concat(G.v.war.neg.sc, G.v.war.neg.tr),
        gr: ['neg o v ' + G.utils.addSpan(G.v.war.sc)]
    }, { // will
        sc: G.v.will.sc,
        pr: G.v.will.pr,
        en: G.v.will.en,
        tr: G.v.will.trigs,
        hl: [].concat(G.v.will.sc, G.v.will.pr),
        gr: 'v',
        or: [
            [G.notes.or.as, 'will'],
            [G.notes.or.ae, 'willan']
        ]
    }, { // will neg
        sc: G.v.will.neg.sc,
        sc_alt: G.v.will.neg.sc_alt,
        en: G.v.will.neg.en,
        tr: G.v.will.trigs,
        hl: [].concat(G.v.will.neg.sc, G.v.will.neg.tr),
        gr: ['neg o v ' + G.utils.addSpan(G.v.will.sc)]
    }, { // will pt and pp
        sc: G.v.will.pt_pp.sc,
        en: G.v.will.pt_pp.en,
        tr: G.v.will.trigs,
        hl: [].concat(G.v.will.pt_pp.sc, G.v.will.pt_pp.pr),
        gr: ['pt and ptp o v ' + G.utils.addSpan(G.v.will.sc)],
        or: [
            [G.notes.or.as, 'wald'],
            [G.notes.or.ae, 'wolde']
        ]
    }, { // will pt and pp neg
        sc: G.v.will.pt_pp.neg.sc,
        en: G.v.will.pt_pp.neg.en,
        tr: G.v.will.trigs,
        hl: [].concat(G.v.will.pt_pp.neg.sc, G.v.will.pt_pp.neg.tr),
        gr: ['neg pt and ptp o v ' + G.utils.addSpan(G.v.will.sc)],
        ex: 'Ye wadna could tell he uised tae be in the airmy'
    }
    // v war end
    // Template
    // // v {{ wird }}
    // { // v {{ wird }}
    //     sc: G.v.{{ wird }}.sc,
    //     en: G.v.{{ wird }}.en,
    //     pr: G.v.{{ wird }}.pr,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: [].concat(G.v.{{ wird }}.sc, G.v.{{ wird }}.pr),
    //     gr: 'v'
    // }, { // v {{ wird }} neg
    //     sc: G.v.{{ wird }}.neg.sc,
    //     en: G.v.{{ wird }}.neg.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: [].concat(G.v.{{ wird }}.neg.sc, G.v.{{ wird }}.neg.tr),
    //     gr: 'neg o ' + G.v.{{ wird }}.meta.gr_hw
    // }, { // v {{ wird }} neg third person singular
    //     sc: G.v.{{ wird }}.neg.tps.sc,
    //     en: G.v.{{ wird }}.neg.tps.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.neg.tps.sc, // no specific trigger for this conjugation
    //     gr: 'neg third person singular o ' + G.v.{{ wird }}.meta.gr_hw
    // }, { // v {{ wird }} pt
    //     sc: G.v.{{ wird }}.pt.sc,
    //     en: G.v.{{ wird }}.pt.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.pt.sc,
    //     gr: 'pt o ' + G.v.{{ wird }}.meta.gr_hw
    // }, { // v {{ wird }} pt neg
    //     sc: G.v.{{ wird }}.pt.neg.sc,
    //     en: G.v.{{ wird }}.pt.neg.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.pt.neg.sc,
    //     gr: 'neg pt o ' + G.v.{{ wird }}.meta.gr_hw
    // }, { // v {{ wird }} pp
    //     sc: G.v.{{ wird }}.pp.sc,
    //     en: G.v.{{ wird }}.pp.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.pp.sc,
    //     gr: 'pp o ' + G.v.{{ wird }}.meta.gr_hw
    // }, { // v {{ wird }} -ing form
    //     sc: G.v.{{ wird }}.ing.sc,
    //     en: G.v.{{ wird }}.ing.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.ing.sc
    // }, { // v Third person singular
    //     sc: G.v.{{ wird }}.tps.sc,
    //     en: G.v.{{ wird }}.tps.en,
    //     tr: G.v.{{ wird }}.trigs,
    //     hl: G.v.{{ wird }}.tps.sc,
    //     gr: 'third person singular o ' + G.v.{{ wird }}.meta.gr_hw
    //
    // },
    // // v {{ wird }} end
);
/**
 * Adjectives
 */

G.adj = {}; // More complex adjectives

G.adj.guid = {
    trigs: 'gwid',
    pr: ['gid', 'gyid', 'göd', 'gaed', 'gweed', 'geed']
};

/**
 * Add adjectives to dictionary object
 */

G.dict.push({ // A
    sc: 'ae',
    pr: ['ae', 'yae'],
    en: ['one', 'only'],
    gr: 'adj',
    tr: ['ane', 'yay', 'ain', 'yin', 'wan', 'een', 'ann'],
    ex: ['I haed ae last beer syne taen the gate hame', 'Fowk bein full o theirsels wis the ae thing I couldna staund']
}, {
    sc: 'aesome',
    en: [
        ['single', 'solitary']
    ],
    gr: 'adj'
}, {
    sc: 'aefauld',
    en: [
        ['single'],
        ['simple', 'sincere', 'honest', 'faithful', 'single-minded']
    ],
    tr: ['single minded', 'unified'],
    hl: ['aefauld', 'single minded'],
    gr: 'adj'
}, {
    sc: 'afore gane',
    en: [
        ['previous', 'prior', 'antecedent']
    ],
    gr: 'adj phr'
}, {
    sc: 'allevolie',
    en: [
        ['giddy', 'volatile']
    ],
    gr: 'adj',
    tr: ['alevoly', 'alevolie'],
    or: [
        [G.notes.or.ms, 'alla-volie'],
        ['frae the ' + G.notes.or.f, 'à la volée']
    ]
}, { // B
    sc: 'baltic',
    def: 'o the weather, the temperatur: fell cauld',
    tr: ['chankin', 'cold', 'cauld'],
    hl: ['baltic', 'cold', 'cauld'],
    gr: ['adj', 'informal']
}, {
    sc: 'bittie',
    en: 'a bit of',
    gr: 'adj (quasi), by omíssion o prep <span>o</span>',
    ex: 'I wadna mind a wee bittie cake',
    or: 'see n'
}, {
    sc: 'bluitert',
    pr: ['blootert', 'bleetert'],
    tr: ['bloutered', 'blootered', 'bloutert', 'blootert'],
    en: ['drunk', 'having been hit or kicked hard'],
    gr: ['adj', 'informal']
}, {
    sc: 'braw',
    en: [
        ['fine', 'splendid', 'excellent', 'worthy'],
        ['elegant', 'well-dressed', 'showy'],
        ['handsome', 'beautiful', 'strong', 'able-bodied'],
        'considerable (of a sum of money)',
        'pleasant (of the weather)'
    ],
    tr: ['well dressed', 'able bodied', 'considerable', 'pleasant', 'bra', 'braa', 'brow', 'good'],
    gr: 'adj',
    ex: [G.ex.g, G.ex.v],
    or: [
        [G.notes.or.as, 'braw, bra, brawf'],
        ['variant o the ' + G.notes.or.mf, 'brave']
    ],
    au: 'braw'
}, {
    sc: 'brawlike',
    en: [
        ['fine', 'splendid', 'nice']
    ],
    tr: ['braw like', 'braw-like'],
    gr: 'adj'
}, {
    sc: 'byous',
    en: [
        ['wonderful', 'extraordinary', 'exceptional']
    ],
    gr: 'adj'
}, { // C
    sc: 'cantie',
    en: [
        ['lively', 'cheerful', 'pleasant'],
        ['small and neat'],
        ['comfortable']
    ],
    tr: ['canty', 'merry'],
    gr: 'adj',
    ex: 'They haed a cantie efternuin in the beer gairden'
}, {
    sc: 'chankin',
    def: 'o the weather, the temperatur: (fell) cauld',
    tr: ['chanking', 'baltic', 'cold', 'cauld'],
    hl: ['chankin', 'cold', 'cauld'],
    gr: ['adj', 'informal']
}, {
    sc: 'cauld',
    en: 'cold',
    tr: ['chanking', 'chankin', 'baltic', 'cold', 'cauld'],
    hl: 'cauld',
    gr: 'adj'
}, {
    sc: 'contigue',
    en: [
        ['contiguous', 'adjacent']
    ],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'contigue'],
        [G.notes.or.mf, 'contigu'],
        [G.notes.or.l, 'contiguus']
    ]
}, {
    sc: 'contermit',
    tr: 'contermt',
    en: [
        ['determined', 'stubborn']
    ],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'contermit, contermyt']
    ]
}, {
    sc: 'contemporar',
    en: 'contemporary',
    gr: 'adj'
}, {
    sc: 'contrair',
    en: [
        ['contrary', 'opposite', 'unfavourable', 'adverse']
    ],
    tr: 'against',
    hl: 'contrair',
    gr: 'adj',
    or: 'see n',
    ex: ['Contrair til expectations, he did weel in his exams', 'Maist law makars threapit for a chynge in the law, but a wheen held the contrair view', 'He’s a ill-naiturt an contrair chiel']
}, {
    sc: 'defamator',
    en: 'defamatory',
    tr: 'defamator',
    gr: 'adj',
    or: [
        [G.notes.or.as, 'defamatoir, defamatore, defamatour'],
        [G.notes.or.mf, 'diffamatoire']
    ]
}, { // D
    sc: 'defeat',
    tr: ['defait', 'defeet'],
    en: [
        ['defeated'],
        ['exhausted', 'worn out']
    ],
    gr: 'adj',
    or: 'see v'
}, {
    sc: 'deleerit',
    en: [
        ['delirious', 'mad', 'temporarily out of one\'s senses']
    ],
    gr: 'adj',
    or: [
        [G.notes.or.emods2, 'deleeret, deleerit, delireet'],
        [G.notes.or.mf, 'delirer'],
        [G.notes.or.l, 'dēlīrāre']
    ]
}, {
    sc: 'doutsome',
    en: [
        ['doubtful', 'undecided', 'ambiguous', 'uncertain']
    ],
    gr: 'adj'
}, { // E
    sc: 'easter',
    en: ['eastern', 'the more easterly of two places'],
    tr: ['wester', 'wastern', 'western'],
    hl: 'easter',
    gr: 'adj',
    def: 'locatit tae the east; the mair easter o twa steids, biggins or ither things; kythes in steid names, e.g. Easter Road'
}, {
    sc: 'elementar',
    en: [
        ['basic', 'elemental', 'elementary']
    ],
    tr: 'fundamental',
    hl: 'elementar',
    gr: 'adj',
    or: [
        [G.notes.or.as, 'elementar, elementair'],
        [G.notes.or.mf, 'elementaire'],
        [G.notes.or.l, 'elementārius']
    ]
}, {
    sc: 'evendoun',
    en: [
        ['<span>of heavy rain</span> straight', 'perpendicular'],
        ['honest', 'frank', 'sincere'],
        ['sheer', 'absolute', 'downright']
    ],
    pr: 'evendoon',
    tr: 'straight',
    gr: 'adj'
}, {
    sc: 'evenforrit',
    en: 'straightforward',
    tr: 'straight forward',
    gr: 'adj'
}, {
    sc: 'evident',
    en: [
        ['clear', 'plain', 'obvious']
    ],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'evident, euident'],
        [G.notes.or.l, 'ēvidens']
    ]
}, {
    sc: 'exact',
    en: 'precise',
    pr: ['egzak', 'egzakt'],
    tr: ['exactly', 'exact', 'exackly'],
    hl: ['exact', 'exack'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'exact, exack'],
        [G.notes.or.l, 'exactus']
    ]
}, { // F
    sc: 'fantoush',
    pr: 'fantoosh',
    en: [
        ['overdressed', 'flashy', 'fancy', 'ultra fashionable', 'ornate']
    ],
    gr: 'adj',
    or: [
        [G.notes.or.mode, 'fanty-sheeny'],
        [G.notes.or.it, 'fantoccino']
    ],
    ex: 'Ye dinna think this jaiket is a bittie fantoush, div ye?'
}, {
    sc: 'fashious',
    en: [
        ['troublesome', 'annoying', 'difficult'],
        ['fractious', 'peevish']
    ],
    gr: 'adj',
    ex: 'What wi aw the snaw, drivin intae wark wis awfu fashious'
}, {
    sc: 'feart',
    en: [
        ['afraid', 'anxious']
    ],
    gr: 'adj',
    ex: G.ex.a
}, {
    sc: 'fell',
    en: [
        ['fierce', 'cruel', 'harsh'],
        ['remarkable', 'considerable', 'extremely strong, big or loud'],
        ['<em>of weather</em> violent', 'inclement'],
        ['energetic and capable', 'sturdy'],
        ['clever', 'shrewd']
    ],
    tr: ['extremely big', 'extremely loud', 'violent', 'ruthless'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'fell, fel'],
        [G.notes.or.me, 'fel']
    ]
}, {
    sc: 'forby',
    sc_alt: 'forbye',
    pr: 'forBye',
    en: [
        ['extraordinary', 'strange', 'unusually good'],
    ],
    gr: 'adj'
}, {
    sc: ['forementioned', 'forementiont'],
    en: 'aforementioned',
    tr: 'aforementiont',
    gr: 'adj',
    or: ['?' + G.notes.or.eme + '; <span>forementioned</span> kythes in ' + G.notes.or.lms + ' an ' + G.notes.or.emods],
    ex: G.ex.m
}, {
    sc: 'foresaid',
    en: 'aforesaid',
    gr: 'adj',
    tr: 'mention',
    hl: 'foresaid',
    or: [
        [G.notes.or.as, 'for(e)said, foirsaid'],
        [G.notes.or.ae, 'foresæᵹd, foresǽd']
    ]
}, {
    sc: 'furrin',
    en: [
        ['foreign', 'abroad']
    ],
    gr: 'adj',
    tr: ['forrin', 'forain'],
    or: [
        [G.notes.or.as + ' haes ', 'forain(e), forayne, forane'],
        [G.notes.or.me, 'forain(e), forayn(e), forein(e), foreyne'],
        [G.notes.or.af, 'forain']
    ]
}, {
    sc: 'furthie',
    en: [
        ['forward in disposition', 'bold', 'energetic', 'impulsive', 'unabashed'],
        ['generous', 'hospitable', 'liberal']
    ],
    tr: ['friendly', 'affable', 'outgoing', 'forward', 'forrit', 'bauld'],
    hl: ['furthie', 'outgoing', 'forward', 'forrit', 'bauld'],
    gr: 'adj',
    or: [G.notes.or.as + ' haes <span>forthy</span> an later <span>furthy</span> ‘forrit, bauld, enterprísin’'],
    ex: G.ex.r
}, { // G
    sc: 'gey',
    pr: 'guyee',
    en: [
        ['excellent', 'splendid'],
        ['considerable', 'good-sized', 'great'],
        ['disreputable', 'wild']
    ],
    tr: ['guy', 'giy'],
    gr: 'adj',
    or: 'see adv',
    ex: ['It wis a gey trauchle winnin at the tap o Lee Pen', 'It’s gey cauld the nicht']
}, {
    sc: 'gray',
    tr: 'grey',
    def: 'o a colour somegate atween black and white',
    gr: 'adj'
}, {
    sc: 'guid',
    en: 'good',
    tr: G.adj.guid.trigs,
    pr: G.adj.guid.pr,
    gr: 'adj'
}, { // I
    sc: 'ilk',
    en: 'same',
    tr: 'ilka',
    hl: 'ilk',
    gr: 'adj'
}, {
    sc: 'ilka',
    en: [
        ['each', 'every']
    ],
    tr: 'ilk',
    hl: 'ilka',
    gr: 'adj',
    au: 'ilka'
}, { // J
    sc: 'juist',
    pr: G.pr.juist,
    en: [
        ['equitable', 'fair', 'lawful', 'justified'],
        ['exact', 'precise', 'correct', 'accurate']
    ],
    tr: ['just', 'jist', 'exackly', 'exack'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'just, juist'],
        [G.notes.or.me, 'just']
    ]
}, {
    sc: 'depute',
    gr: 'adj',
    tr: ['deputy', 'vice'],
    hl: ['depute', 'deputy', 'vice'],
    def: 'apointit as, or exercein the duties o, depute',
    ex: ['The preses depute gied a gey dreich screed at the annual collogue'],
    or: [
        [G.notes.or.as, 'depute, deput'],
        [G.notes.or.af, 'deputé']
    ]
}, {
    sc: 'acquent',
    en: [
        ['acquainted', 'known', 'familiar with']
    ],
    pr: ['akWant', 'akWent'],
    tr: ['acquant', 'acquaint', 'aquent', 'aquaint', 'kent'],
    hl: ['acquant', 'acquaint', 'aquent', 'aquaint'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'acquent, acquant, aquynt'],
        [G.notes.or.me, 'aquointe'],
        [G.notes.or.mf, 'accointe']
    ],
    ex: ['I’m no yet fully acquent wi the policy', 'I’m weel aquent wi the mínister’s view anent the maiter']
}, {
    sc: ['leart', 'leared'],
    en: [['learned', 'educated']],
    gr: 'adj'
}, { // M
    sc: 'mair',
    en: 'more',
    tr: ['mare'],
    gr: ['adj', 'adv', 'pron'],
    or: [
        [G.notes.or.as, 'mair, mare, mar'],
        [G.notes.or.ae, 'māre']
    ],
    ex: ['We steyed in Milan twa mair days', 'He’s mair aulder nor me', 'She wis mair fasht aboot it than he wis', G.ex.d1, 'Moyen daes muckle but money daes mair'],
    au: 'mair'
}, {
    sc: 'maist',
    en: [
        ['largest', 'greatest', 'very great'],
        ['<span>of persons</span> chief', 'most powerful or important', 'greatest'],
        ['<span>of things</span> chief, principal']
    ],
    tr: ['most', 'maste'],
    gr: 'adj',
    or: 'see pron'
}, {
    sc: 'mony',
    en: 'many',
    gr: ['adj', 'n'],
    or: [
        [G.notes.or.as, 'mony, monie'],
        [G.notes.or.ae, 'mǫniᵹ']
    ]
}, {
    sc: 'muckle',
    pr: ['muckl', 'meekl'],
    en: [
        ['large in size or extent', 'big', 'bulky'],
        ['numerous', 'abundant'],
        ['full-grown', 'adult'],
        ['of high rank or social standing', 'self-important'],
        ['<span>of letters of the alphabet</span> capital']
    ],
    tr: ['large', 'great', 'much', 'capital letter', 'mukkil', 'self important'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'mekill, mykill, mukill, muckle'],
        [G.notes.or.ae, 'micel'],
        [G.notes.or.anor, 'mikill']
    ]
}, { // O
    sc: 'ocht',
    en: 'any',
    gr: 'adj'
}, {
    sc: ['ongaun', 'ongaein'],
    en: [
        ['ongoing', 'continuing']
    ],
    gr: 'adj'
}, {
    sc: 'ony',
    en: 'any',
    tr: 'onie',
    gr: 'adj',
    or: [
        [G.notes.or.as, 'ony'],
        [G.notes.or.ae, 'ǽniᵹ']
    ]
}, {
    sc: 'ordinar',
    en: [
        ['usual', 'normal']
    ],
    tr: 'ordinary',
    gr: 'adj',
    or: [
        [G.notes.or.me, 'ordinari'],
        [G.notes.or.mf, 'ordinaire']
    ]
}, {
    sc: 'ower',
    pr: ['uower', 'oar', 'oor', 'err'],
    en: [
        ['upper', 'higher']
    ],
    gr: 'adj',
    tr: ['owre', 'over'],
    hl: ['ower', 'owre'],
    or: [
        [G.notes.or.as, 'over, oer, ower'],
        [G.notes.or.ae, 'uferra']
    ]
}, { // P
    sc: 'pertinent',
    en: [
        ['belonging or relevant to', 'appropriate']
    ],
    tr: ['belonging to', 'relevant to', 'relevant', 'pertain'],
    hl: ['belonging to', 'relevant to', 'relevant', 'pertinent'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'pertinent'],
        [G.notes.or.me, 'pertinent'],
        [G.notes.or.l, 'pertinentia']
    ]
}, {
    sc: 'previous',
    en: 'previous',
    tr: ['prior', 'antecedent', 'afore gane'],
    gr: 'adj',
    or: [
        [G.notes.or.lms, 'pravious'],
        [G.notes.or.mode, 'prævious, previous'],
        [G.notes.or.l, 'prævi-us']
    ]
}, {
    sc: 'pyntit',
    en: 'decisive',
    gr: 'adj'
}, { // R
    sc: 'ragglish',
    en: [
        ['erratic'],
        ['wild', 'unreliable', 'undisciplined'],
        ['uneven', 'straggling', 'higgledy-piggledy'],
        ['<span>of weather</span> boisterous, uncertain, gusty with rain']
    ],
    tr: ['boisterous', 'uncertain'],
    gr: 'adj'
}, { // S
    sc: 'shuir',
    pr: ['shair', 'shör', 'shür', 'sheer', 'seer'],
    en: [
        ['efficacious', 'effective'],
        ['safe', 'secure', 'strong', 'reliable'],
        ['accurate', 'true', 'assured', 'convinced']
    ],
    tr: 'sure',
    gr: 'adj',
    or: [
        [G.notes.or.as, 'sure, suir(e), seur(e), s(c)hur(e)'],
        [G.notes.or.an, 'sur']
    ],
    ex: 'He wis shuir he’d seen the fellae somewhaur afore'
}, {
    sc: 'sib',
    def: ['relatit by bluid, strynd or mairiage', 'símilar'],
    tr: ['related', 'relatit', 'similar', 'seemilar', 'alike', 'close', 'familiar', 'like'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'sib'],
        [G.notes.or.ae, 'sibb']
    ]
}, {
    sc: 'sleekit',
    en: [['sly', 'cunning'], 'smooth'],
    tr: ['untrustworthy', 'specious'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'slekit, sleikit'],
        [G.notes.or.me, 'sliken, sleken']
    ],
    ex: 'Ay, I wadna trust the sleekit bastart!'
}, {
    sc: 'sweir',
    pr: 'sweer',
    en: [
        ['lazy', 'slothful', 'indolent'],
        ['unwilling', 'reluctant', 'loath'],
    ],
    tr: 'laith',
    gr: 'adj',
    or: [
        [G.notes.or.as, 'swer(e), sweir(e), sweer'],
        [G.notes.or.ae, 'swǽr']
    ]
}, {
    sc: 'sweirt',
    pr: 'sweert',
    en: [
        ['sluggish', 'loath', 'reluctant']
    ],
    tr: 'laith',
    gr: 'adj',
    or: 'see adj <span>sweir</span>'
}, {
    sc: 'timeous',
    en: 'timely',
    tr: ['in good time', 'in guid time', 'early', 'prompt', 'opportune'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'tymous']
    ]
}, { // T
    sc: 'tuim',
    pr: ['tim', 'teem', 'toom', 'taim'],
    en: 'empty',
    tr: ['lanky', 'vacant', 'thin', 'lean', 'unoccupied', 'idling', 'idle'],
    gr: 'adj',
    or: [
        [G.notes.or.as, 'tome, tume'],
        [G.notes.or.ae, 'tōm'],
        [G.notes.or.anor, 'tómr']
    ],
    ex: ['The man wis tuim-heidit!', 'I cam back tuim-haundit']
}, {
    sc: 'unco',
    en: [
        ['unknown', 'unfamiliar', 'strange'],
        ['unusual', 'odd', 'strange', 'peculiar', 'unnatural', 'weird', 'remarkable', '<span>as an intensifier</span> extraordinary', 'great', 'awful'],
        ['reserved', 'shy', 'unfriendly'],
        ['foreign', 'belonging to another nation or culture']
    ],
    tr: ['furrin', 'extraordinary'],
    gr: 'adj',
    or: [
        ['variant o ', 'uncouth'],
        [G.notes.or.as, 'uncow'],
        [G.notes.or.ae, 'uncūð']
    ],
    ex: [G.ex.r, 'He fand hissel in an unco pairt o toun', 'An unco thrang bourached ootside the pairlament biggin', G.ex.v, 'The mechanic haed an unco job sortin the electrics']
}, { // V
    sc: 'versant',
    en: [
        ['conversant with', 'versed in'], 'fluent'
    ],
    tr: ['conversant', 'versed', 'familiar with'],
    gr: 'adj',
    or: [
        [G.notes.or.lms, 'versant'],
        [G.notes.or.eme, 'versant']
    ],
    ex: ['Lizzie wis versant in baith Italians and French', 'He wis weel versant in Scots medieval history']
}, { // W
    sc: ['waster', 'wester'],
    en: ['western', 'the more westerly of two places'],
    tr: ['easter', 'eastern'],
    hl: 'wester',
    gr: 'adj',
    def: 'locatit tae the wast; the mair waster o twa steids, biggins or ither things; aft-times in steid names, e.g. Wester Hailes'
}, {
    sc: 'wastren',
    tr: 'wastern',
    en: 'western',
    gr: 'adj'
}, {
    sc: 'wicelike',
    tr: ['wysslike', 'wycelike', 'wyselike', 'wiselike'],
    en: [ // >
        ['sensible, respectable']
    ],
    gr: 'adj'
}, {
    sc: 'wrocht-up',
    en: 'overwrought',
    tr: ['over-wrought', 'wrocht up', 'wrochtup'],
    gr: 'adj',
    ex: G.ex.w
});
/**
 * Adverbs
 */

G.adv = {}; // More complex adverbs

/**
 * Add adverbs to dictionary object
 */

G.dict.push({ // A
    sc: 'ablo',
    pr: 'abLo',
    sc_alt: 'ablow',
    en: 'below',
    gr: ['prep', 'adv']
}, {
    sc: 'aboot',
    en: 'about',
    tr: 'anenst',
    gr: ['prep', 'adv']
}, {
    sc: 'abuin',
    pr: ['abön', 'abün', 'abin', 'abain', 'abeen'],
    en: 'above',
    gr: ['adv', 'prep']
}, {
    sc: 'aft',
    en: [
        ['often', 'oft']
    ],
    gr: ['adv'],
    or: [
        [G.notes.or.ae, 'oft']
    ]
}, {
    sc: 'aft-times',
    tr: 'afttimes',
    en: [
        ['often', 'frequently']
    ],
    gr: ['adv']
}, {
    sc: 'allevolie',
    en: ['at random'],
    gr: ['adv'],
    tr: ['alevoly', 'alevolie'],
    or: 'see the adj'
}, {
    sc: 'awmaist',
    en: 'almost',
    gr: 'adv'
}, { // B
    sc: 'a bittie',
    en: [
        ['somewhat', 'to a small extent', 'a little too']
    ],
    tr: ['bittie', 'little', 'ower', 'owre', 'too'],
    hl: ['little', 'a little', 'a bittie', 'bittie'],
    or: 'see n',
    ex: ['Jamie haed recovert frae the flu a bittie, but didna yet feel up tae gaun back til his wark', 'I’m a bittie tired for gaun oot, likes', 'It’s a bittie cauld for shorts an t-shirt, is it no?']
}, {
    sc: ['braw', 'brawly'],
    en: [
        ['well', 'finely'],
        ['very', 'extremely']
    ],
    tr: ['bra', 'braa', 'brow', 'good'],
    gr: ['adv'],
    or: 'see the adj',
    ex: G.ex.h
}, {
    sc: ['braw an', 'braw and'],
    en: [
        ['very', 'extremely']
    ],
    gr: ['adv'],
    ex: ['I\'m braw and weel, thanks', 'Hae yoursels a braw and cantie Christmas']
}, {
    sc: 'byous',
    en: [
        ['exceedingly', 'very']
    ],
    gr: 'adv'
}, { // C
    sc: 'contrair',
    en: [
        ['in a contrary way']
    ],
    tr: ['contrarily', 'against'],
    hl: 'contrair',
    gr: 'adv',
    or: 'see n',
    ex: 'He chynged the contents o the file ’ithout takkin a backup, contrair til best prattick'
}, { // D
    sc: 'doun',
    pr: 'doon',
    en: 'down',
    gr: ['adv', 'prep', 'adj'],
    or: [
        [G.notes.or.as, 'doun, down']
    ]
}, { // E
    sc: 'evendoun',
    en: [
        ['absolutely', 'completely', 'downright']
    ],
    tr: 'evendoon',
    gr: 'adv'
}, {
    sc: ['exact', 'exactly'],
    en: 'precisely',
    tr: 'exackly',
    gr: 'adv',
    or: 'see adj',
    ex: 'Meet me there at fower oors exact'
}, { // F
    sc: 'fell',
    en: [
        ['extremely', 'very', 'severely'],
        ['vigorously', 'energetically']
    ],
    gr: 'adv',
    or: 'see adj'
}, {
    sc: 'forby',
    sc_alt: 'forbye',
    pr: 'forBye',
    en: [
        ['beyond', 'past'],
        ['besides', 'in addition', 'as well']
    ],
    tr: ['also', 'too', 'additionally'],
    hl: ['forby', 'also', 'additionally'],
    gr: ['adv']
}, { // G
    sc: 'gey',
    pr: 'guyee',
    en: [
        ['considerably', 'very', 'rather'],
    ],
    tr: ['guy', 'giy'],
    gr: ['adv'],
    or: [
        [G.notes.or.as, 'gay(e), gey'],
        [G.notes.or.f, 'gai']
    ]
}, {
    sc: ['gey an', 'gey and'],
    en: [
        ['rather', 'very'],
    ],
    gr: 'adv',
    ex: [G.ex.g, 'The band’s new album wis gey and listenable']
}, {
    sc: 'hinderly',
    en: 'eventually',
    gr: ['adv']
}, { // J
    sc: 'juist',
    pr: G.pr.juist,
    en: [
        ['exactly', 'accurately', 'correctly', 'directly'],
        ['at this time', 'just now', 'precisely'],
        ['only', 'merely', 'barely']
    ],
    tr: ['just', 'exack', 'exact'],
    gr: ['adv'],
    or: 'see adj',
    ex: [G.ex.g1, 'It’s juist gane echt oors', G.ex.h1]
}, {
    sc: 'guid',
    en: [
        ['good', 'very', 'pretty']
    ],
    tr: G.adj.guid.trigs,
    pr: G.adj.guid.pr,
    gr: 'adv'
}, {
    sc: 'atweel',
    en: [
        ['assuredly', 'certainly', 'indeed']
    ],
    gr: 'adv'
}, {
    sc: 'atour',
    en: [
        ['besides', 'over and above', 'moreover', 'in addition']
    ],
    tr: ['attour', 'further', 'as well', 'too', 'additionally', 'mairower', 'mairowre'],
    hl: ['attour', 'further', 'atour', 'additionally', 'mairower', 'mairowre'],
    gr: ['adv', 'prep']
}, {
    sc: 'mairower',
    en: 'moreover',
    tr: 'mairowre',
    gr: 'adv',
    tr: ['besides', 'further'],
    hl: 'besides',
    or: [
        [G.notes.or.as, 'mar(e)over, mairower']
    ]
}, {
    sc: ['certie', 'certes'],
    pr: ['certie', 'certis'],
    en: [
        ['certainly', 'assuredly']
    ],
    gr: ['adv'],
    or: [
        [G.notes.or.as, 'certis'],
        [G.notes.or.me, 'certes']
    ]
}, { // M
    sc: 'maist',
    en: [
        ['to the greatest extent', 'in the highest degree'],
        '<span>as the superlative</span> most',
        'very',
        'mainly'
    ],
    tr: ['most', 'maste'],
    gr: 'adv',
    or: 'see pron',
    ex: ['It wis maist kind o ye', 'What she wantit maist o aw wis a vacance']
}, {
    sc: 'maist',
    def: 'aphetic mak o <em>awmaist</em>',
    tr: ['almost', 'aamaist', 'awmaist'],
    gr: 'adv'
}, {
    sc: 'maistlins',
    en: [
        ['almost', 'nearly']
    ],
    gr: 'adv'
}, {
    sc: 'maistly',
    en: [
        ['most of all', 'especially'],
        ['almost', 'nearly']
    ],
    gr: 'adv',
    tr: 'mostly'
}, {
    sc: 'muckle',
    pr: ['muckl', 'meekl'],
    en: [
        ['to a large extent or degree']
    ],
    tr: ['much', 'greatly', 'very', 'exceedingly', 'mukkil'],
    gr: 'adv',
    or: 'see adj'
}, {
    sc: 'no',
    en: 'not',
    gr: 'adv',
    tr: ['nae', 'nay'],
    or: [
        [G.notes.or.as, 'no, nocht']
    ],
    ex: ['Haud on, I’ll no be a meenit', 'I’v no haed time tae check my email yet'],
    inf: G.notes.c
}, {
    sc: 'nae',
    en: 'not',
    gr: 'adv',
    tr: ['no', 'nay'],
    or: [
        [G.notes.or.as, 'na']
    ],
    ex: ['I’v nae heard that sang afore', 'She’s been nae weel for a whilie nou']
}, {
    sc: ['na', 'naw', 'nae'],
    en: 'no',
    gr: 'adv',
    def: 'the negative repone',
    tr: 'nay',
    ex: 'Naw thanks, pal',
    or: [
        [G.notes.or.as, 'na'],
        [G.notes.or.as, 'nay']
    ]
}, {
    sc: ['nae'],
    en: 'no',
    gr: ['adj', 'adv'],
    tr: 'nay',
    ex: ['It’s nae bother', 'Nae nukes!', 'The’r nae mair tickets left'],
    or: [
        [G.notes.or.as, 'na, nae']
    ]
}, { // O
    sc: 'ony',
    en: [
        ['in any degree', 'to any extent'],
        ['in any way', 'at all']
    ],
    gr: ['adv'],
    or: 'see adj'
}, {
    sc: 'onyplace',
    en: 'anywhere',
    gr: ['adv']
}, {
    sc: 'onywhaur',
    en: 'anywhere',
    gr: ['adv']
}, {
    sc: 'onywey',
    en: [
        ['anyhow', 'in any way']
    ],
    tr: 'anyway',
    gr: ['adv']
}, {
    sc: 'onyweys',
    en: [
        ['anyhow', 'in any way', 'anywhere']
    ],
    tr: 'anyway',
    gr: ['adv']
}, {
    sc: 'ocht',
    en: [
        ['somewhat', 'rather', 'in some way', 'to some degree']
    ],
    gr: ['adv']
}, {
    sc: 'for ordinar',
    en: [
        ['normally', 'usually']
    ],
    tr: 'ordinarily',
    gr: 'adv',
    or: 'see n <em>ordinar</em>'
}, {
    sc: 'ordinar',
    en: [
        ['usually', 'in the usual way', 'somewhat', 'to a certain extent']
    ],
    tr: 'ordinarily',
    gr: 'adv',
    or: 'see the adj'
}, {
    sc: 'ower',
    pr: ['uower', 'oar', 'oor', 'err'],
    en: [
        ['above', 'covering', 'downward (over)'],
        ['across', 'sideways'],
        ['overmuch, excessively'],
        ['from beginning to end', 'throughout'],
        ['off to sleep']
    ],
    tr: ['owre', 'ootthrou', 'overly', 'abuin', 'over', 'too'],
    gr: 'adv',
    or: [
        [G.notes.or.as, 'over, ouer, ower'],
        [G.notes.or.ae, 'ofer']
    ]
}, { // S
    sc: 'sae',
    en: 'so',
    tr: ['thus', 'therefore', 'as', 'actually', 'indeed', 'in order that', 'for tae'],
    gr: 'adv',
    or: [
        [G.notes.or.as, 'sa, swa, sua'],
        [G.notes.or.ae, 'swā']
    ],
    ex: ['I wis gey forfauchelt sae didna bather gaun oot', 'The wather’s no sae nice the day', 'He haed tae pit mair siller in the pairkin meter sae as tae evite gettin a ticket', 'Ye’r a bonnie fechter, sae ye ar!']
}, {
    sc: 'shuir',
    en: [
        ['surely', 'indeed', 'for certain']
    ],
    gr: ['adv'],
    tr: ['shair', 'shör', 'shür', 'sheer', 'seer', 'sure'],
    or: 'see adj'
}, {
    sc: 'shuirly',
    en: [
        ['securely', 'safely'],
        ['with assurance, certainty or conviction', 'undoubtedly']
    ],
    tr: ['with certainty', 'with conviction', 'shairly', 'sheerly', 'seerly', 'surely'],
    gr: 'adv',
    or: 'see adj',
    ex: ['Ye’d shuirly need tae hae a permit, wad ye no?', G.ex.x]
}, {
    sc: 'sicweys',
    en: 'thus',
    gr: ['adv']
}, {
    sc: 'syne',
    pr: ['sine', 'seen'],
    en: [
        ['thereupon', 'directly after', 'next', 'afterwards', 'subsequently'],
        ['ago', 'since', 'before now'],
        ['from then', 'since', 'thereafter', 'as a result', 'consequently'],
        ['in that case', 'so', 'then']
    ],
    tr: 'than',
    gr: 'adv',
    or: [
        [G.notes.or.as, 'syn(e), sin, sen, sene'],
        [G.notes.or.ae, 'siþþan']
    ]
}, {
    sc: 'aefauldly',
    en: [
        ['sincerely', 'honestly', 'faithfully']
    ],
    gr: 'adv'
}, { // T
    sc: ['than'],
    pr: ['than', 'thaun', 'thin', 'dan'],
    en: ['at a particular time', 'subsequently', ['consequently', 'in that case']],
    tr: 'then',
    gr: ['adv'],
    ex: 'Lat’s gang til the pairty for a wee whilie than come hame',
    or: [
        [G.notes.or.as, 'than, then'],
        [G.notes.or.ae, 'ðanne']
    ]
}, {
    sc: 'the day',
    en: 'today',
    gr: 'adv, n',
    ex: [G.ex.n, G.ex.o, G.ex.p],
    or: '<span>the day</span> first appears in scrievit form in ' + G.notes.or.as + ' frae aboot 1500'
}, {
    sc: 'the morn',
    en: [
        ['tomorrow', 'the following morning or day']
    ],
    gr: 'adv, n',
    or: '<span>the morne</span> ‘the follaein day’ dates back til aboot 1470',
    ex: 'I\'ll see ye the morn!'
}, {
    sc: 'the morra',
    en: 'tomorrow',
    gr: 'adv, n',
    or: G.notes.or.as + ' haes <em>the morrow</em>',
    ex: 'Gie me a call the morra'
}, {
    sc: 'the nicht',
    en: 'tonight',
    tr: 'the night',
    gr: 'adv, n',
    ex: ['Are ye gaun oot the nicht?', 'It’s awfu cauld the nicht'],
    or: 'first kythin DOST haes o <span>the nicht</span> (in the mak <em>the nycht</em>) ‘the present or approachin nicht’ is frae 1475'
}, {
    sc: 'the year',
    en: 'this year',
    or: [
        [G.notes.or.as, 'the year']
    ]
}, {
    sc: 'the nou',
    en: [
        ['just now', 'at present', 'just a moment ago'],
        ['in a moment', 'soon']
    ],
    tr: ['the-nou', 'the-noo', 'the noo', 'the now', 'at the moment', 'suin', 'sin', 'seen', 'momentarily', 'a moment ago'],
    ex: ['Haud on; I’ll be there the nou', 'I cawed her the nou but she wisna answerin'],
    or: 'first kythes in ' + G.notes.or.mods
}, {
    sc: 'timeously',
    def: 'in a timeous mainer, promptly',
    tr: ['promptly', 'expeditiously', 'opportunely', 'in good time', 'early', 'in guid time'],
    gr: 'adv',
    or: [
        [G.notes.or.as, 'tymously']
    ]
}, { // U
    sc: 'unco',
    en: [
        ['very', 'exceedingly', 'extremely']
    ],
    gr: 'adv',
    or: 'see adj'
}, {
    sc: 'up',
    en: 'up',
    gr: ['adv', 'prep', 'adj'],
    or: [
        [G.notes.or.as, 'up, upe']
    ]
}, {
    sc: 'up the stair',
    en: 'upstairs',
    gr: 'phrasal adv',
    ex: ['Awa up the stair an hae a leuk', 'My neebour up the stair telt me']
}, {
    sc: ['whan', 'fan'],
    pr: ['whan', 'whaun', 'whin', 'fan', 'fin', 'aan'],
    en: 'when',
    gr: ['adv', 'conj']
}, {
    sc: ['whiles', 'fyles'],
    pr: ['whilez', 'filez'],
    en: [
        ['sometimes', 'at times', 'occasionally']
    ],
    gr: ['adv']
}, {
    sc: ['what for', 'fat for'],
    sc_alt: ['whit for', 'fit for'],
    en: 'why',
    gr: 'adv'
});
/**
 * Nouns
 */

G.n = {}; // More complex nouns

/**
 * Add nouns to dictionary object
 */

G.dict.push({
    sc: 'airtin',
    def: 'wab link',
    tr: 'link',
    gr: 'n',
    ex: 'The airtins ablo gang intil mair detail'
}, {
    sc: 'annualrent',
    def: ['rent peyed ilka year', 'interest on borraed siller'],
    tr: ['interest', 'annual rent'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'annualrent, annual rent']
    ]
}, {
    sc: 'aipple',
    en: 'apple',
    tr: 'epple',
    gr: 'n',
    or: [
        [G.notes.or.as, 'appil, aipill'],
        [G.notes.or.ae, 'æppel']
    ],
    au: 'aipple'
}, {
    sc: 'airmy',
    en: 'army',
    tr: 'ermy',
    gr: 'n',
    or: [
        [G.notes.or.as, 'airmie, erme, armie'],
        [G.notes.or.af, 'armee']
    ]
}, {
    sc: 'associe',
    pr: 'aSosee',
    en: 'association',
    gr: 'n',
    or: [
        ['?' + G.notes.or.f, 'associé']
    ]
}, { // B
    sc: 'bairn',
    def: [['a child', 'a baby', 'a young person', 'a son or dochter']],
    tr: ['wean', 'child', 'son', 'daughter', 'dochter', 'baby', 'infant'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'barne, bairn, bern'],
        [G.notes.or.ae, 'bearn'],
        [G.notes.or.anor, 'barn']
    ],
    au: 'bairn'
}, {
    sc: ['baw', 'baa'],
    en: 'ball',
    tr: ['ba', 'ba\''],
    gr: 'n',
    or: [
        [G.notes.or.as, 'ball, baw, baa'],
        ['likely ' + G.notes.or.me, 'bale']
    ]
}, {
    sc: 'bittie',
    en: [
        ['a small piece', 'a little bit'],
        'a short distance',
        'a short time',
        'difficulty'
    ],
    tr: 'little',
    gr: 'n',
    or: 'dim o <span>bit</span>',
    ex: ['Ay, I\'ll hae a bittie, please', 'Sophie texted tae lat her faither ken she’d be there in a bittie', 'Alec walkit on a wee bittie aheid']
}, {
    sc: 'bouk',
    en: [
        ['bulk', 'size', 'quantity'], 'body (of a person or animal)'
    ],
    tr: 'body',
    gr: 'n',
    ex: 'The tapmaist file bouk permittit is 8MB'
}, {
    sc: 'boy',
    def: 'a man',
    tr: ['man', 'lad', 'laddie', 'loun'],
    hl: ['boy', 'man'],
    gr: ['n', 'informal'],
    ex: ['The boy wi the bustit timin belt is sittin waitin in the office', 'Ach, he’s an auld boy sae I wisna gonnae argue wi him', 'That boy taks nae shite frae naeb’dy!']
}, {
    sc: 'brae',
    def: ['the (stey or sclentin) banks o a river, loch or seashore', 'a bank or lenth o grund wi a fairly strait upwart sclent til it', 'a gate wi a stey upcome (aft-times in street names)', 'the brou o a hill'],
    tr: ['hillside', 'slope', 'road', 'street', 'bank', 'knowe', 'brow', 'brou', 'gate', 'gait'],
    hl: ['brae', 'hillside', 'brow', 'bank', 'street', 'road', 'brow', 'brou', 'gate', 'gait'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'bra', 'bray', 'brae'],
        [G.notes.or.anor, 'brá'],
        [G.notes.or.ga, 'bràighe']
    ]
}, {
    sc: 'breeks',
    pr: ['breeks', 'briks'],
    en: ['trousers', ['underpants', 'knickers']],
    tr: ['breeches', 'troosers', 'bricks'],
    gr: 'n pl',
    or: [
        [G.notes.or.as, 'brekis, breikis'],
        [G.notes.or.ae, 'brōc']
    ],
    au: 'breeks'
}, {
    sc: ['brur', 'brither'],
    en: 'brother',
    gr: 'n',
    or: [
        [G.notes.or.as, 'brother, bruthir, broder']
    ],
    au: 'brur'
}, {
    sc: 'broun',
    pr: 'broon',
    en: 'brown',
    gr: ['adj, n'],
    or: [
        [G.notes.or.as, 'broun(e)'],
        [G.notes.or.ae, 'brūn']
    ],
    au: 'broun'
}, { // C
    sc: 'cairt',
    en: ['cart', ['chart, map']],
    tr: 'cairte',
    gr: 'n'
}, {
    sc: 'certificate',
    en: 'certificate',
    gr: 'n',
    or: [
        [G.notes.or.ms, 'certificat'],
        [G.notes.or.mf, 'certificat']
    ],
}, {
    sc: 'claes',
    en: 'clothes',
    gr: 'n',
    or: [
        [G.notes.or.as, 'claise, claes, clathis'],
        [G.notes.or.ae, 'claðas']
    ],
}, {
    sc: 'coo',
    en: 'cow',
    tr: 'cou',
    gr: 'n',
    or: [
        [G.notes.or.as, 'cow, cou'],
        [G.notes.or.ae, 'cū']
    ],
    au: 'coo'
}, {
    sc: 'cloot',
    def: ['a bit claith, rag, dishclaith, patch'],
    tr: ['cloth', 'clout', 'cloth', 'rag', 'patch', 'dishclaith', 'dishcloth'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'clout, clowt'],
        [G.notes.or.ae, 'clūt']
    ],
    au: 'cloot'
}, {
    sc: 'close',
    def: ['an enclosed area neist til a biggin; a courtyaird', ['a passage atween biggins', 'a nairae loan wi hoosees on ilka side'], 'a fermyaird', 'the passage gien ingate til a common stair; the mean area in a block o flats', 'a tenement biggin'],
    tr: ['passage', 'farmyard', 'farm yard', 'stairwell', 'tenement', 'building', 'courtyard', 'coortyaird'],
    hl: ['passage', 'farmyard', 'farm yard', 'stairwell', 'tenement', 'courtyard', 'coortyaird'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'clos, clois, close'],
        [G.notes.or.mf, 'clos'],
        [G.notes.or.l, 'clausum']
    ]
}, {
    sc: 'collectorie',
    def: 'the office o (tax) collector',
    tr: 'tax collector',
    gr: ['n', 'obsolete'],
    or: [
        ['Aiblins ' + G.notes.or.af, 'collecterie']
    ]
}, {
    sc: 'complouther',
    pr: 'comploother',
    en: [
        ['a mix up', 'confusion'], 'a mixture', 'a conversation'
    ],
    tr: ['mix up', 'mix-up', 'mixture', 'conversation', 'compluter', 'compluther'],
    gr: 'n',
    or: ['unkent, but mak compare wi ' + G.notes.or.af + ' <span>complote</span>, ‘a raivelt thrang o fowk’']
}, {
    sc: 'componer',
    def: 'a body that writes muisic',
    tr: 'composer',
    gr: 'n',
    or: 'see the v <span>tae compone</span>'
}, {
    sc: 'composition',
    en: [
        ['<span>law</span> a sum paid in settlement of a claim, dispute or obligation; the amount fixed by mutual agreement'],
        ['a piece of writing; a work of literature, music or art'],
        ['a combination of elements', 'a mixture']
    ],
    tr: 'settlement',
    hl: ['composition', 'settlement'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'compositioun, composicioun'],
        [G.notes.or.me, 'composicioun'],
        [G.notes.or.l, 'compositio']
    ]
}, {
    sc: 'co-airtar',
    en: 'coordinator',
    gr: 'n',
    ex: 'A full-time co-airtar wis appyntit tae the team'
}, {
    sc: 'contrair',
    en: [
        ['the contrary', 'the opposite']
    ],
    tr: ['contrary', 'opposite', 'on the contrary', 'to the contrary'],
    hl: ['contrary', 'opposite'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'contrar, contrair'],
        [G.notes.or.af, 'contraire'],
        [G.notes.or.l, 'contrarius']
    ],
    ex: ['Her client haed naething tae say in the contrair', 'Na, na; I dinna haud wi that — I ken tae the contrair!', 'I wis expectin the play tae be awfu dreich, but it turnt oot the contrair wis true']
}, {
    sc: 'council',
    pr: 'cooncil',
    en: 'council',
    gr: 'n',
    or: [
        [G.notes.or.as, 'council(l), counsale, councell, counsell'],
        [G.notes.or.me, 'counseil'],
        [G.notes.or.l, 'concilium']
    ],
    ex: 'Edinburgh Cíty Council the day set furth new wittins anent the raxin oot o the tram netwark til Newhaven'
}, { // D
    sc: 'daeins',
    en: 'activity',
    gr: 'n'
}, {
    sc: 'dask',
    en: [
        ['desk', 'seat', 'church pew']
    ],
    gr: 'n',
    or: [
        [G.notes.or.as + ' (frae 1530)', 'dask, daske'],
        ['possible influence o ' + G.notes.or.as + ' <em>dais, das</em>, frae the ' + G.notes.or.nfd, 'dais']
    ]
}, {
    sc: 'debursement',
    en: 'disbursement',
    gr: 'n',
    or: 'see v <span>deburse</span>',
    ex: 'A comatee wis estaiblisht tae owersee the debursement o aid'
}, {
    sc: 'defamation',
    en: [
        ['discredit', 'disgrace', 'dishonour'],
        ['<span>law</span> libel', 'slander']
    ],
    tr: ['libel', 'discrediting'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'defamatioun, defamatione'],
        [G.notes.or.me, 'defāmacioun'],
        [G.notes.or.l, 'diffāmātio']
    ]
}, {
    sc: 'defaut',
    en: [
        ['lack or absence (of something)', 'neglect', 'negligence', 'failure to pay (a debt)']
    ],
    tr: ['default', 'lack', 'absence'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'defaut, defalt, defawt'],
        [G.notes.or.me, 'defaut']
    ]
}, {
    sc: 'defeat',
    en: 'defeat',
    tr: ['defait', 'defeet'],
    gr: 'n',
    or: 'see v'
}, {
    sc: 'defect',
    pr: ['deefekt', 'deefek'],
    en: [
        ['shortcoming', 'imperfection', 'flaw']
    ],
    gr: 'n',
    or: [
        [G.notes.or.as, 'defect'],
        [G.notes.or.l, 'dēfectus']
    ]
}, {
    sc: 'defection',
    en: [
        ['desertion', 'failure in duty'],
        ['defect', 'flaw', 'failure']
    ],
    gr: 'n',
    or: [
        [G.notes.or.as, 'defection'],
        [G.notes.or.l, 'dēfectio']
    ]
}, {
    sc: 'depute',
    en: 'a deputy',
    gr: 'n',
    tr: ['deputy', 'vice'],
    ex: ['The Green Pairty convener wis ettlin tae appynt a depute by the end o the simmer', G.ex.f],
    or: 'see adj'
}, {
    sc: 'desuetude',
    en: [
        ['disuse', 'discontinuance']
    ],
    gr: 'n law',
    or: [
        [G.notes.or.f, 'désuétude'],
        [G.notes.or.l, 'dēsuētūdo']
    ],
    ex: 'It wis an auld law that haed fawen intae desuetude'
}, {
    sc: 'development',
    en: 'development',
    gr: 'n'
}, {
    sc: 'differ',
    en: [
        ['a difference of opinion', 'a disagreement or dispute'],
        ['a difference', 'a dissimilarity']
    ],
    tr: ['disagreement', 'dispute', 'difference', 'dissimilarity'],
    gr: 'n',
    or: ['see v']
}, {
    sc: ['ditter'],
    en: 'dither',
    tr: 'swither',
    hl: 'dither',
    gr: ['n', 'v'],
    ex: ['Ay, he’s a richt ditter', 'The’r nae time tae be ditterin aboot']
}, {
    sc: 'documentar',
    en: 'documentary',
    gr: ['n', 'adj']
}, { // E
    sc: 'ee',
    en: 'eye',
    tr: 'e',
    pl: {
        sc: 'een',
        en: 'eyes',
        tr: ['ees', 'e\'en'],
    },
    gr: 'n',
    or: [
        [G.notes.or.as, 'ee'],
        ['(plural)', 'een(e), eeis'],
        [G.notes.or.ae, 'ēage']
    ]
}, {
    sc: 'eneuch',
    pr: ['inyuch', 'inyooch', 'unyooch', 'unooch', 'unyoch'],
    tr: 'sufficient',
    hl: 'eneuch',
    en: 'enough',
    gr: ['n', 'adj', 'adv'],
    ex: 'I’v haed juist aboot eneuch o your haiverin'
}, {
    sc: 'environs',
    en: [
        ['the environment', 'surrounds']
    ],
    tr: 'environment',
    gr: 'n',
    or: [
        '?uissage as noun frae Modren English',
        G.notes.or.as + ' haes the verb <em>enveron, inviroun, inveroun</em> <em>(to encircle, surroond)</em>', ['frae the ' + G.notes.or.me, 'envirounen'],
        [G.notes.or.af, 'environner']
    ]
}, {
    sc: 'ettle',
    en: [
        ['one\'s aim or purpose', 'one\'s design or object'],
        ['an effort', 'an attempt'],
        ['an ambition', 'a desire']
    ],
    tr: ['objective', 'effort', 'attempt', 'aim', 'purpose', 'design', 'object', 'ambition', 'desire', 'ettlin'],
    hl: ['objective', 'effort', 'attempt', 'aim', 'purpose', 'design', 'object', 'ambition', 'desire'],
    gr: 'n',
    or: 'see v'
}, {
    sc: 'ettlin',
    en: [
        ['purpose', 'intention', 'effort', 'endeavour', 'eagerness', 'ambition']
    ],
    tr: 'ettle',
    hl: 'ettlin',
    gr: 'n'
}, {
    sc: 'evidence',
    def: 'pruif',
    tr: 'proof',
    gr: 'n',
    or: [
        [G.notes.or.as, 'evidence, evidens'],
        [G.notes.or.mf, 'evidence'],
        [G.notes.or.l, 'ēvidentia']
    ]
}, {
    sc: 'examination',
    en: [
        ['testing', 'a test', 'investigation', 'interrogation']
    ],
    tr: 'test',
    gr: 'n',
    or: [
        [G.notes.or.as, 'examinatioun, exemenatioun'],
        [G.notes.or.l, 'exāminātio']
    ]
}, {
    sc: 'examinator',
    en: 'examiner',
    gr: 'n',
    or: [
        [G.notes.or.as, 'examinato(u)r'],
        [G.notes.or.l, 'examinator']
    ]
}, { // F
    sc: 'fankle',
    en: [
        ['tangle', 'muddle']
    ],
    gr: 'n',
    or: [
        [G.notes.or.as, 'fang'],
        [G.notes.or.anor, 'fang']
    ]
}, {
    sc: 'fash',
    en: [
        ['trouble', 'bother', 'annoyance'], 'a troublesome person'
    ],
    tr: 'nuisance',
    gr: 'n',
    or: 'see v',
    ex: 'It wis a richt fash for Tammas tae get his wark duin whan he haed tae uise ane o his auld laptops'
}, {
    sc: 'fasherie',
    en: [
        ['trouble', 'annoyance', 'fuss']
    ],
    gr: 'n',
    or: [
        [G.notes.or.ms, 'fasch(e)rie, fash(e)rie'],
        [G.notes.or.mf, 'fascherie']
    ],
    ex: 'The’ wis a bit fasherie winnin at the fitba stadium in time for kick-aff'
}, {
    sc: 'feartie',
    en: 'coward',
    gr: ['n', 'informal']
}, {
    sc: 'fecht',
    en: 'fight',
    tr: ['ficht', 'struggle', 'battle'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'fecht, feicht'],
        [G.notes.or.ae, 'feoht']
    ]
}, {
    sc: 'fechter',
    en: 'a fighter',
    tr: 'fighter',
    gr: 'n',
    or: [
        [G.notes.or.as, 'fichter, fechtar']
    ],
    ex: 'She’s a bonnie fechter, that ane!'
}, {
    sc: 'fechtin',
    en: 'fighting',
    tr: 'fechting',
    gr: 'vbl n',
    or: [
        [G.notes.or.as, 'fechting']
    ],
    ex: 'He wis liftit by the polis for fechtin'
}, {
    sc: 'film-makar',
    en: 'film-maker',
    tr: ['filmmaker', 'filmmakar'],
    gr: 'n'
}, {
    sc: 'film-makkin',
    en: 'film-making',
    tr: ['filmmaking', 'filmmakkin'],
    gr: 'n'
}, {
    sc: 'fitba',
    pr: ['fitbaw', 'fitbaa'],
    en: 'football',
    gr: 'n',
    or: [
        G.notes.or.as + ' <span>futebal(l), fuitbal, futbaw</span>.' + ' The last letter (‘l’) in the Aulder Scots maks is what’s kent as a ‘vouel lenth merker’ and wadna aye hae been soondit', [G.notes.or.lme, 'fotebal']
    ]
}, {
    sc: 'fowk',
    pr: ['fuowk', 'foak'],
    en: 'people',
    gr: 'n',
    or: [
        [G.notes.or.as, 'folk, folkis'],
        [G.notes.or.ae, 'folc']
    ]
}, {
    sc: 'fruit',
    pr: ['fröt', 'frit', 'freet'],
    def: ['the product o a tree or ither plant that haes seeds intil’t, an can be etten as fuid', 'revenue accressed frae the crap o the laund', 'affcome, vantage, profit', 'affspring'],
    en: 'fruit',
    tr: ['result', 'benefit', 'profit', 'offspring'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'fruit, fruyt, frute'],
        [G.notes.or.me, 'fruit'],
        [G.notes.or.l, 'frūctus']
    ]
}, {
    sc: 'furthsetter',
    sc_alt: 'furthsettar',
    def: 'a body or company that redds an sets furth beuks, jurnals, or muisic for sale',
    tr: 'publisher',
    gr: 'n',
    or: [
        [G.notes.or.ms, 'furthsettar, furthsetter']
    ]
}, {
    sc: 'furthsettin',
    en: 'publishing',
    gr: 'n',
    or: [
        [G.notes.or.ms + ' <span>furthsetting</span>', '<span>‘settin forrit, feshin on, forderin’</span>']
    ]
}, { // G
    sc: 'gate',
    sc_alt: 'gait',
    def: [
        ['a wey', 'a path', 'a road', 'a street (in a toun); kythes aft-times in steid names']
    ],
    tr: ['street', 'way', 'wey', 'path', 'road'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'gate, gait'],
        [G.notes.or.anor, 'gata']
    ]
}, {
    sc: 'gloriosity',
    en: 'self-importance',
    tr: ['boast', 'gloriositie', 'self importance'],
    hl: ['gloriosity', 'gloriositie', 'self importance'],
    gr: 'n',
    or: [
        [G.notes.or.ms, 'gloriositie'],
        [G.notes.or.mf, 'glorieuseté']
    ]
}, {
    sc: 'greet',
    en: 'a fit of weeping',
    tr: 'tears',
    hl: 'greet',
    gr: 'n',
    or: 'see v',
    ex: 'She felt better for hivin haed a guid greet'
}, {
    sc: 'guids',
    en: 'goods',
    gr: 'n',
    ex: 'The guids wis delivert in the efternuin'
}, { // H
    sc: 'haik',
    en: ['a person or animal given to roaming about', ['a trek', 'journey']],
    tr: 'trek',
    gr: 'n',
    or: 'see v'
}, {
    sc: 'haudin gaun',
    en: 'continuation',
    gr: 'n'
}, {
    sc: 'heid',
    pr: 'heed',
    en: 'head',
    gr: 'n',
    or: [
        [G.notes.or.as, 'heid, hede'],
        [G.notes.or.ae, 'hēafod']
    ]
}, {
    sc: 'horse',
    def: 'a huift, plant-eatin domesticatit mammal',
    tr: 'hors',
    gr: 'n',
    or: [
        [G.notes.or.as, 'hors, horse'],
        [G.notes.or.ae, 'hors']
    ]
}, {
    sc: 'oor',
    sc_alt: 'hour',
    pr: 'oor',
    en: 'hour',
    gr: 'n',
    or: [
        [G.notes.or.as, 'hour, howr'],
        [G.notes.or.me, 'houre']
    ],
    ex: 'The forgaitherin o the management comatee is tae stert at twa oors, juist efter denner'
}, {
    sc: 'hoose',
    en: 'house',
    gr: 'n',
    or: [
        [G.notes.or.as, 'hous, hows, hus(e)'],
        [G.notes.or.ae, 'hūs']
    ],
    ex: [
        ['They’d juist aboot pit by eneuch siller for a deposit on a hoose'],
        ['It’s yersel! Come awa ben the hoose'],
    ],
    au: 'hoose'
}, {
    sc: 'meat',
    sc_alt: 'mait',
    pr: 'mait',
    en: [
        ['food', 'sustenance'],
        'a meal',
        'meat'
    ],
    tr: ['meal', 'maet'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'mete, meit, met, mait, meat'],
        [G.notes.or.ae, 'mete']
    ]
}, { // I
    sc: 'ilk',
    en: [
        ['a family', 'a race', 'a kind', 'a type']
    ],
    tr: ['family', 'race', 'kind', 'type', 'ilka'],
    hl: ['family', 'race', 'kind', 'type'],
    gr: 'n'
}, {
    sc: ['ilkane', 'ilk ane'],
    en: [
        ['each one', 'everyone']
    ],
    gr: ['pron']
}, {
    sc: 'innovation',
    def: [
        ['the chyngin o an estaiblisht mak, wey o daein things or institution'],
        ['<em>law</em> the chyngin or replacement o a legal servitude or provísion'],
        ['something new introduce’t']
    ],
    gr: 'n',
    or: [
        [G.notes.or.as, 'innovation(e), innovatioun(e)'],
        [G.notes.or.l, 'innovātio']
    ]
}, {
    sc: 'novator',
    en: 'innovator',
    gr: 'n',
    or: [
        [G.notes.or.as, 'novator, novateur'],
        [G.notes.or.f, 'novateur'],
        [G.notes.or.l, 'novātor']
    ]
}, {
    sc: 'accress',
    en: 'increase',
    gr: ['n', 'obsolete'],
    or: 'see v'
}, {
    sc: 'knawledge',
    en: 'knowledge',
    gr: 'n'
}, { // L
    sc: 'lad',
    en: [
        ['a boy', 'young man'],
        ['a male servant', 'groom'],
        'a son',
        'a male sweetheart'
    ],
    tr: ['son', 'male sweetheart', 'boy', 'young man', 'laddie', 'loun', 'man'],
    hl: ['son', 'male sweetheart', 'boy', 'young man'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'lad']
    ]
}, {
    sc: 'laddie',
    en: ['a young man', 'a male child', 'a male sweetheart', 'a son'],
    tr: ['young man', 'male child', 'male sweetheart', 'son', 'boy', 'loun', 'lad', 'man'],
    hl: ['young man', 'male child', 'male sweetheart', 'son', 'boy'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'laddie']
    ],
    ex: 'That’s Eck’s laddie, is it no?'
}, {
    sc: 'lair',
    en: [
        'lore',
        'teaching',
        ['learning', 'knowledge', 'education']
    ],
    gr: 'n',
    tr: ['instruct', 'lare'],
}, {
    sc: 'lawmakar',
    en: [
        ['lawmaker', 'legislator']
    ],
    gr: 'n',
    or: 'protologism steidit on English <em>lawmaker</em>'
}, {
    sc: 'licht',
    en: 'light',
    gr: ['n', 'adj'],
    or: [
        [G.notes.or.as, 'licht, lycht, lyght'],
        [G.notes.or.ae, 'lēoht']
    ]
}, {
    sc: 'loan',
    def: ['an unpedmentit or girssie track for cattle; aft-times in steid names', 'a througate, street or road', ['the ferm gate airtin til the fermhoose', 'the grund adjynin a fermhoose', 'the causey']],
    tr: ['lane', 'track', 'street', 'road', 'path', 'causey', 'gate', 'gait', 'througate'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'lone, loan, loyne'],
        [G.notes.or.ae, 'lanu']
    ]
}, {
    sc: 'loch',
    def: [
        ['a natural-formed area o watter surroundit by laund (rangin in bouk frae muckle doun til lairge pownds); aft-times in street names', 'an inlat o the sea'], 'a dub'
    ],
    tr: ['lake', 'pond', 'puddle', 'pool', 'inlet', 'inlat', 'watter', 'dub'],
    hl: ['lake', 'pond', 'puddle', 'pool', 'dub'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'loch, louch(e)'],
        [G.notes.or.ga, 'loch']
    ]
}, {
    sc: 'loun',
    pr: 'loon',
    en: [
        ['a young man', 'boy', 'youth'],
        ['a young farm worker'],
        ['a male child', 'son', 'baby boy']
    ],
    tr: ['young man', 'farm-boy', 'farm boy', 'lad', 'laddie', 'man', 'son', 'child', 'bairn', 'wean', 'baby'],
    hl: ['young man', 'farm-boy', 'farm boy', 'son'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'loun']
    ]
}, { // M
    sc: 'maiter',
    en: 'matter',
    tr: ['maitter', 'metter', 'material', 'substance', 'subject', 'theme', 'undertaking', 'concern', 'business', 'issue'],
    gr: ['n', 'v'],
    or: [
        [G.notes.or.as, 'mater(e)'],
        [G.notes.or.me, 'mater'],
        [G.notes.or.l, 'māteria']
    ]
}, {
    sc: 'mak',
    en: [
        ['form', 'shape', 'a (distinctive) style of manufacture'],
        ['the action or process of manufacturing (an object) or developing (a character)']
    ],
    tr: ['style', 'manufacturing', 'developing', 'build', 'appearance', 'fashion', 'manufacturing'],
    gr: 'n',
    or: 'see v'
}, {
    sc: 'maun',
    pr: 'maun',
    en: [
        ['compulsion', 'necessity']
    ],
    tr: 'must',
    gr: 'n',
    or: 'see v'
}, {
    sc: 'mind',
    tr: 'mynd',
    def: 'the mind; that whilk is brocht back tae mind or mindit, memory, a mindin',
    gr: 'n',
    or: 'see v'
}, {
    sc: 'mindin',
    en: [
        ['a memory', 'a recollection']
    ],
    tr: ['memory', 'recollection', 'mynd'],
    gr: 'n'
}, { // N
    sc: 'narrative',
    def: [['an accoont o events', 'the action o relatin']],
    tr: ['account', 'accoont', 'recital', 'statement'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'narrative'],
        [G.notes.or.mf, 'narrative']
    ]
}, {
    sc: 'naturality',
    en: [
        ['innate ability or intelligence', 'talent']
    ],
    tr: 'brilliance',
    gr: 'n',
    or: [
        [G.notes.or.as, 'naturalité, naturalty'],
        [G.notes.or.f, 'naturalité'],
        [G.notes.or.l, 'nātūrālitas']
    ]
}, {
    sc: 'netwark',
    en: 'network',
    gr: 'n',
    ex: [G.ex.s, G.ex.t]
}, { // O
    sc: 'onhaudin',
    en: 'continuation',
    gr: 'n'
}, {
    sc: 'onybody',
    en: 'anybody',
    tr: ['oniebody', 'emdie', 'emdy'],
    gr: 'n'
}, {
    sc: 'oot',
    en: 'out',
    gr: ['n', 'v', 'adj', 'adv', 'prep', 'interj'],
    or: [
        [G.notes.or.as, 'out, owt'],
        [G.notes.or.ae, 'ūt']
    ],
    au: 'oot'
}, {
    sc: 'ordinar',
    en: [
        ['the usual state of things', 'what is customary or habitual']
    ],
    tr: 'ordinary',
    gr: 'n',
    or: [
        [G.notes.or.me, 'ordiner, ordinārī'],
        [G.notes.or.mf, 'ordinaire']
    ]
}, {
    sc: 'origin',
    en: 'origin',
    gr: 'n'
}, {
    sc: 'ocht',
    en: [
        ['aught', 'anything'], 'nothing'
    ],
    gr: 'n',
    ex: ['Jamie didna hae the time tae mak ocht for the bake sale', 'Yon’s ocht ava tae dae wi it!']
}, {
    sc: 'owerance',
    en: [
        ['control', 'mastery', 'superiority']
    ],
    tr: ['command', 'owreance', 'owersicht', 'owresicht', 'oversight', 'supervision', 'ascendancy'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'ourance, owrance, overance']
    ],
    ex: 'The Labour Pairty tyned owerance o the cooncil'
}, {
    sc: 'pairlament',
    en: 'parliament',
    gr: 'n',
    or: [
        [G.notes.or.as, 'perlament, pairliament, parliament'],
        [G.notes.or.me, 'parlement']
    ]
}, { // P
    sc: 'pairt-takar',
    tr: 'pairt takar',
    en: ['stakeholder', 'supporter'],
    gr: 'n',
    ex: G.ex.k
}, {
    sc: 'parrock',
    def: ['an enclosure or pen', 'a pen for sheep', 'a boorach o fowk, bease or objects croudelt close thegither'],
    tr: ['enclosure', 'pen', 'paddock', 'sheep pen', 'boorach', 'bourach', 'parreck', 'parroch'],
    hl: ['enclosure', 'paddock', 'sheep pen', 'pen'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'parrok'],
        [G.notes.or.ae, 'pearroc']
    ]
}, {
    sc: 'paven',
    en: 'pavane',
    tr: ['pavene', 'paven'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'paven, pavin, pavane']
    ]
}, {
    sc: 'pneumonie',
    en: 'pneumonia',
    gr: 'n',
    or: [
        [G.notes.or.as, 'peripneumonie'],
        [G.notes.or.eme, 'peripneumony'],
        [G.notes.or.f, 'péripneumonie']
    ],
    ex: 'She wis awfu unweel wi the pneumonie'
}, {
    sc: 'poyet',
    en: 'poet',
    gr: 'n',
    or: [
        [G.notes.or.as, 'poet, poiet, poyet'],
        // ['?' + G.notes.or.me, 'poet(e), poyet(e)'],
        // ['?' + G.notes.or.af, 'poete'],
        // [G.notes.or.l, 'poēta'],
        // [G.notes.or.gk, 'poētēs']
    ]
}, {
    sc: 'poyetry',
    en: 'poetry',
    gr: 'n',
    or: [
        [G.notes.or.as, 'poetry, poetrie, poyetrie'],
    ]
}, { // Q
    sc: ['quine', 'quinie'],
    sc_alt: 'quean',
    pr: ['kwine', 'kwinie'],
    en: [
        ['a young (unmarried) woman', 'a wench', 'a girl'],
        ['a female child', 'a schoolgirl'],
        'a female sweetheart',
        'a daughter'
    ],
    tr: ['young woman', 'wench', 'girl', 'schoolgirl', 'sweetheart', 'daughter', 'lass', 'lassie', 'dochter'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'quene, quein'],
        [G.notes.or.ae, 'cwēn, cwene']
    ],
    au: 'quine'
}, {
    sc: 'question',
    en: 'question',
    tr: 'quaisten',
    gr: ['n', 'v'],
    // or: [
    //     [x, ''],
    //     [x, '']
    // ]
}, {
    sc: 'uiss',
    pr: ['yös', 'yis', 'ees', 'yoos'],
    tr: ['yiss', 'uise', 'yaise', 'yaize'],
    hl: ['uiss', 'yiss', 'ees'],
    en: 'use',
    gr: 'n'
}, {
    sc: 'rax',
    en: [
        ['stretching', 'a pull', 'a stretch'],
        ['a strain', 'a sprain'],
        ['reaching', 'reach']
    ],
    gr: 'n',
    or: 'see verb'
}, { // R
    sc: 'remeid',
    en: [['remedy', 'redress']],
    tr: ['remeed', 'relief', 'cure'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'remed(e)'],
        [G.notes.or.an, 'remeide'],
        [G.notes.or.an + ', ' + G.notes.or.mf, 'remede']
    ]
}, {
    sc: 'retiral',
    pr: 'reteeral',
    en: 'retirement',
    tr: 'demit',
    hl: 'retiral',
    gr: 'n',
    or: [
        ['a Modren Scots coinage; Aulder Scots haes the verb <em>retere, reteir</em>, frae the ' + G.notes.or.mf, 'retirer']
    ]
}, {
    sc: 'rhetoric',
    pr: 'rEtorik',
    en: 'rhetoric',
    gr: 'n',
    or: [
        [G.notes.or.as, 'rethorik, rethorie, rethoreis'],
        [G.notes.or.af, 'rhétorique'],
        [G.notes.or.l, 'rhētorica'],
        'frae the Greek <span>rhētorikē</span>'
    ],
    ex: 'It wis naething but tuim rhetoric'
}, {
    sc: 'road',
    def: [
        ['a braid route atween twa steids', 'a gate']
    ],
    tr: ['gate', 'gait', 'route', 'raid'],
    hl: ['gate', 'gait', 'route'],
    gr: 'n',
    or: 'SND states that the mak <em>road</em> (frae Auld English <em>rād</em>) is a 16t century borraein frae English, the historical Scots mak bein <em>raid</em>'
}, {
    sc: 'roaster',
    def: 'a body that haivers, fashes fowk wi their ill laits, or is thocht tae be makkin an ídiot o theirsels',
    gr: ['n', 'informal', 'derogatory']
}, { // S
    sc: 'sel-law',
    en: 'self-governance',
    tr: ['sel law', 'self governance'],
    gr: 'n',
    or: 'protologism'
}, {
    sc: 'sib',
    en: 'a relative, or kinsman or kinswoman',
    tr: ['relative', 'kinsman', 'kinswoman'],
    gr: 'n',
    or: 'see adj'
}, {
    sc: 'signatur',
    en: 'signature',
    gr: 'n'
}, {
    sc: 'siller',
    en: ['money', 'silver'],
    tr: ['funds', 'cash', 'wealth'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'silver, siller'],
        [G.notes.or.ae, 'seolfor']
    ],
    ex: 'I’ll send ye the siller'
}, {
    sc: ['snaw', 'snaa'],
    en: 'snow',
    tr: 'sna',
    gr: 'n',
    or: [
        [G.notes.or.as, 'snaw'],
        [G.notes.or.xx, 'snāw']
    ]
}, {
    sc: 'springheid',
    pr: 'springheed',
    en: [
        ['source', 'origin']
    ],
    gr: 'n'
}, {
    sc: 'steerar',
    sc_alt: 'steerer',
    en: 'activist',
    gr: 'n',
    or: '<span>steer</span> ‘tae steer, gie airt til’ wi <span>-ar</span> suffix. Baith <span>-ar</span> an <span>-er</span> kythe on the SLC wabsite. Waled <span>-ar</span> here by analogy wi <span>co-airtar</span>, <span>pairt-takar</span> and <span>lawmakar</span>'
}, {
    sc: 'swither',
    en: [
        ['a state of indecision or doubt', 'hesitation', 'uncertainty'],
        ['a state of nervousness or agitation', 'panic', 'fluster'],
        ['a state of confusion', 'a tangled or muddled condition'],
        ['a dithering, undecided person']
    ],
    tr: ['indecision', 'doubt', 'nervousness', 'agitation', 'confusion', 'tangle', 'muddle', 'ditter', 'doiter', 'unsure'],
    hl: ['indecision', 'doubt', 'nervousness', 'agitation', 'confusion', 'tangle', 'muddle'],
    gr: 'n',
    ex: G.ex.i,
    or: 'see v'
}, {
    sc: 'system',
    en: 'system',
    gr: 'n'
}, { // T
    sc: 'than',
    pr: ['than', 'thaun', 'thin', 'dan'],
    en: [
        ['that time', 'a particular time']
    ],
    tr: 'then',
    gr: 'n',
    ex: 'We shoud hae it fínisht by than',
    or: [
        [G.notes.or.as, 'than, thyne'],
        [G.notes.or.ae, 'ðanne']
    ]
}, {
    sc: 'toun',
    pr: 'toon',
    def: [
        ['an area wi a name and boonds whaur fowk haes sattelt', 'a burgh', 'a cíty']
    ],
    en: 'town',
    gr: 'n',
    or: [
        [G.notes.or.as, 'toun, town(e), ton(e)'],
        [G.notes.or.ae, 'tūn']
    ]
}, {
    sc: 'tred',
    en: 'trade',
    gr: 'n',
    ex: ['He\'s a jyner tae tred', G.ex.l]
}, {
    sc: 'unco',
    en: [
        ['<span>mainly pl</span> strange or unusual things, rarites, novelties, curiosities'],
        ['<span>pl</span> news', 'gossip'],
        ['<span>mainly pl</span> strangers', 'foreigners']
    ],
    tr: ['news', 'strangers'],
    gr: 'n',
    or: 'see adj'
}, { // W
    sc: ['wabsteid', 'wabsite'],
    en: 'website',
    pr: ['wabsteed', 'wabsyt'],
    tr: ['websteid'],
    gr: 'n',
    au: ['wabsite', 'wabsteid']
}, {
    sc: 'wark',
    en: 'work',
    tr: ['labour', 'labor', 'toil', 'wirk'],
    hl: 'wark',
    gr: 'n',
    or: [
        [G.notes.or.as, 'wark, werk'],
        [G.notes.or.ae, 'weorc']
    ],
    ex: [
        ['He gaed intae wark early for tae set furth a saftware update'],
        G.ex.w
    ]
}, {
    sc: 'watter',
    en: 'water',
    gr: ['n', 'v'],
    or: [
        [G.notes.or.as, 'watter, wattir'],
        [G.notes.or.ae, 'wæter <span>(noun)</span>, wæterian <span>(verb)</span>']
    ],
    au: 'watter'
}, {
    sc: 'wirker',
    sc_alt: 'warker',
    pr: ['wirkur', 'wurkur'],
    en: 'worker',
    gr: 'n',
    ex: 'He’s an awfu haurd wirker',
    or: [
        [G.notes.or.as, 'wirkar, wyrkar(e)']
    ]
}, {
    sc: 'wuman',
    en: 'woman',
    pl: {
        sc: 'wemen',
        en: 'women',
        tr: ['weemen', 'weemin', 'weimen', 'wimmen', 'wimen']
    },
    gr: 'n',
    tr: ['wummin', 'wumman'],
    or: [
        [G.notes.or.as, 'woman, weman'],
        ['(plural)', 'wemen, weimen, weemen'],
        [G.notes.or.ae, 'wīfmann']
    ],
    au: 'wuman'
}, {
    sc: 'wynd',
    def: '<em>fund mainly in street names</em> a nairae, aft-times windin street or pass, maist aften in touns an cíties',
    tr: ['street', 'alley', 'road', 'gate', 'gait'],
    gr: 'n',
    or: [
        [G.notes.or.as, 'wynd, wyne, wind, weynd'],
        [G.notes.or.ae, 'gewind']
    ]
}, { // Y
    sc: 'yoon',
    def: 'a derogatory term for unionist',
    gr: ['n', 'informal', 'derogatory']
}, { // Z
    sc: 'zoomer',
    def: 'a body that’s ragglish or allevolie',
    gr: ['n', 'informal', 'derogatory']
});
/**
 * Geographical
 */

G.dict.push({
    sc: 'Catalonie',
    en: 'Catalonia',
    gr: 'pn'
}, {
    sc: 'Africae',
    en: 'Africa',
    gr: 'pn',
    or: [
        [G.notes.or.mods, 'Africy'],
        [G.notes.or.as, 'Aphrik, Affrik, Afric']
    ]
}, {
    sc: 'African',
    en: 'African',
    gr: 'adj'
}, {
    sc: 'Albainie',
    en: 'Albania',
    gr: 'pn'
}, {
    sc: 'Albainian',
    en: 'Albanian',
    gr: 'adj',
    def: 'anent Albainie, its fowk, or their leid'
}, {
    sc: 'Americae',
    en: 'America',
    gr: 'pn',
    tr: 'Ameriky',
    or: [
        [G.notes.or.mods + ' haes haed ', 'Ameriky <span>syne at least the 19t century</span>']
    ]
}, {
    sc: 'American',
    en: 'American',
    gr: 'adj'
}, {
    sc: 'Andorrae',
    en: ['Andorra', 'Andorran'],
    gr: ['pn', 'adj']
}, {
    sc: 'Armenie',
    en: ['Armenia', 'Armenian'],
    gr: ['pn', 'adj'],
    or: [
        [G.notes.or.as, 'Armeny, Armenye']
    ]
}, {
    sc: 'Austrailie',
    en: ['Australia', 'Australian'],
    gr: ['pn', 'adj'],
    tr: ['Australie', 'Australy'],
    or: [
        [G.notes.or.mods + ' haes haed ', 'Australy, Austraily <span>syne the 19t century</span>']
    ]
}, {
    sc: 'Austrik',
    en: ['Austria', 'Austrian'],
    tr: ['austrich', 'austrick'],
    gr: ['pn', 'adj'],
    or: [
        [G.notes.or.as, 'Ostrike, Austrik']
    ]
}, {
    sc: 'Baliaries',
    en: 'Balearics',
    gr: ['pn', 'adj'],
}, {
    sc: 'Belgium',
    en: 'Belgium',
    gr: 'pn'
}, {
    sc: 'Bertany',
    en: 'Brittany',
    gr: ['pn', 'adj'],
    or: [[G.notes.or.as, 'Bertan(e), Bartan(e)']]
}, {
    sc: 'Bey o Bescay',
    en: 'Bay of Biscay',
    gr: 'pn'
}, {
    sc: 'Beyellaroushie',
    en: 'Belarus',
    gr: 'pn'
}, {
    sc: 'Beyellaroushian',
    en: 'Belarusian',
    gr: 'adj'
}, {
    sc: 'Bosnie',
    en: 'Bosnia',
    gr: ['pn', 'adj']
}, {
    sc: 'Bulgairie',
    pr: 'bulGairae',
    en: 'Bulgaria',
    tr: ['Bulgars', 'Bulgarie'],
    hl: ['Bulgairie', 'Bulgarie'],
    gr: 'pn'
}, {
    sc: 'Bulgars',
    en: 'Bulgarian',
    tr: ['Bulgairie', 'Bulgarie'],
    hl: 'Bulgars',
    gr: 'adj',
    def: 'anent Bulgairie, its fowk, or their leid'
}, {
    sc: 'Californie',
    en: 'California',
    gr: 'pn',
    def: 'a state in wastren USA'
}, {
    sc: 'Canadae',
    en: 'Canada',
    gr: 'pn',
    or: [
        [G.notes.or.mods + ' haes haed ', 'Canady, Canadie <span>syne at least the 19t century</span>']
    ]
}, {
    sc: 'Cheena',
    en: 'China',
    tr: ['cheenae', 'cheeny'],
    gr: 'pn',
    or: [
        [G.notes.or.mods + ' haes haed ', 'Cheena <span>syne at least the mid-19t century</span>']
    ]
}, {
    sc: 'Corsicae',
    en: 'Corsica',
    gr: 'pn'
}, {
    sc: 'Croaitie',
    en: 'Croatia',
    gr: 'pn'
}, {
    sc: ['Czechie', 'Czechland'],
    en: ['Czech Republic, Czechia'],
    tr: ['checkia', 'check republic'],
    gr: 'pn',
    or: 'Czechie is a Modren Scots protologism o Česko, a new offícial name for Česká republika; ' + G.notes.b
}, {
    sc: 'Denmark',
    def: 'a country in Scandinaivie',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Denmark']
    ]
}, {
    sc: 'Dens',
    def: ['the Scandinaivie leid spoken in Denmark and in pairts o Greenland and the Faerae Isles', ['a body that bides in, or is frae, Denmark', 'someane o Dens strynd']],
    tr: ['dane', 'danish'],
    gr: ['n'],
    or: 'see adj'
}, {
    sc: 'Dens',
    def: 'anent Denmark, its fowk, or their leid',
    tr: 'danish',
    gr: ['adj'],
    or: [
        [G.notes.or.as, 'Dens, Dence'],
        [G.notes.or.ae, 'denisc']
    ]
}, {
    sc: 'Easter Seas',
    en: 'Baltic Sea',
    gr: 'pn'
}, {
    sc: ['Edinburgh', 'Embra', 'Edinburrae'],
    en: 'Edinburgh',
    def: 'the capital cíty o Scotland',
    gr: 'pn'
}, {
    sc: ['Estonie', 'Eistland'],
    en: 'Estonia',
    gr: 'pn'
}, {
    sc: 'England',
    def: 'a country in soothren Great Brítain that is pairt o the Unitit Kinrick',
    tr: 'Ingland',
    gr: 'pn'
}, {
    sc: 'Ethiopie',
    en: 'Ethiopia',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Ethiope']
    ]
}, {
    sc: 'Europe',
    en: 'Europe',
    gr: 'pn'
}, {
    sc: 'Faerae Isles',
    en: 'Faroe Isles',
    gr: 'pn'
}, {
    sc: 'Finland',
    gr: 'pn',
    en: 'Finland'
}, {
    sc: 'Flaunders',
    gr: 'pn',
    en: 'Flanders'
}, {
    sc: 'Fraunce',
    gr: 'pn',
    en: 'France'
}, {
    sc: 'Freishland',
    en: 'Frisia',
    gr: 'pn',
}, {
    sc: 'Frisie',
    en: 'Frisian',
    def: 'anent Freishland, its fowk, or their leid',
    gr: 'adj'
}, {
    sc: 'Galicie',
    en: 'Galicia',
    tr: 'Galice',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Galice']
    ]
}, {
    sc: 'Georgie',
    en: 'Georgia',
    gr: 'pn'
}, {
    sc: 'Germany',
    en: 'Germany',
    gr: 'pn'
}, {
    sc: 'Girth o the North Pole',
    en: 'Arctic Circle',
    gr: 'pn'
}, {
    sc: 'Greece',
    en: 'Greece',
    gr: 'pn'
}, {
    sc: 'Iceland',
    en: 'Iceland',
    gr: 'pn'
}, {
    sc: 'Indie',
    en: 'India',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Inde, Ynde'],
        'likely frae the ' + G.notes.or.f + ' <em>Inde</em> (direct or by wey o ' + G.notes.or.me + ')'
    ]
}, {
    sc: ['Ireland', 'Irland'],
    def: ['a country comprisin aboot fower fifts o the island o Ireland; forby kent as the Republic o Ireland', 'an island in the North Atlantic, tae the wast o Great Brítain'],
    tr: ['Republic o Ireland', 'Republic of Ireland'],
    gr: 'pn'
}, {
    sc: 'Italy',
    en: 'Italy',
    gr: 'pn'
}, {
    sc: 'Italians',
    tr: 'italian',
    def: 'anent Italy, its fowk, or their leid',
    gr: ['adj']
}, {
    sc: 'Jamaicae',
    en: 'Jamaica',
    gr: 'pn'
}, {
    sc: 'Japan',
    en: 'Japan',
    gr: 'pn',
    def: 'A country East Asie',
}, {
    sc: 'Lappland',
    en: 'Lappland',
    gr: 'pn'
}, {
    sc: 'Leifland',
    en: 'Lithuania',
    gr: 'pn'
}, {
    sc: 'Lettland',
    en: 'Latvia',
    gr: 'pn'
}, {
    sc: 'Litchtenstein',
    en: 'Liechtenstein',
    gr: 'pn'
}, {
    sc: 'Lusinburg',
    en: 'Luxembourg',
    gr: 'pn'
}, {
    sc: 'Malaysie',
    en: 'Malaysia',
    gr: 'pn',
}, {
    sc: 'Mediterrane',
    en: 'Mediterranean',
    tr: ['Meditterane', 'Mediterane'],
    gr: ['pn', 'adj'],
    or: [
        [G.notes.or.as, 'Mediterrane'],
        [G.notes.or.l, 'mediterrān -us']
    ]
}, {
    sc: 'Netherlands',
    en: 'Netherlands',
    gr: 'pn'
}, {
    sc: 'Neveron',
    en: 'Basque Country',
    gr: 'pn'
}, {
    sc: 'Norrowa',
    sc_alt: 'Norroway',
    tr: 'Norrawa',
    en: 'Norway',
    def: 'a country in Scandinaivie',
    gr: 'pn'
}, {
    sc: 'Norse Sea',
    en: 'Norwegian Sea',
    gr: 'pn'
}, {
    sc: 'North Pole',
    en: 'Arctic',
    gr: 'pn'
}, {
    sc: 'North Sea',
    en: 'North Sea',
    gr: 'pn'
}, {
    sc: 'Norland Ireland',
    def: 'the bit o the Unitit Kinrick locatit in the nor-east pairt o Ireland',
    tr: 'Northern Ireland',
    gr: 'pn'
}, {
    sc: 'Poland',
    en: 'Poland',
    gr: 'pn'

}, {
    sc: ['Portingal', 'Portugal'],
    en: 'Portugal',
    gr: 'pn'
}, {
    sc: 'Roumainie',
    en: 'Romania',
    gr: 'pn'
}, {
    sc: 'Roushie',
    en: 'Russia',
    gr: ['pn', 'adj']
}, {
    sc: 'Sardinie',
    en: 'Sardinia',
    gr: 'pn'
}, {
    sc: 'Scandinaivie',
    en: 'Scandinavia',
    gr: ['pn', 'adj']
}, {
    sc: 'Scotland',
    gr: 'pn',
    def: 'a country in northren Great Brítain that is pairt o the Unitit Kinrick'
}, {
    sc: 'Serbie',
    en: 'Serbia',
    gr: 'pn'
}, {
    sc: 'Sicilie',
    en: 'Sicilly',
    gr: 'pn'
}, {
    sc: 'Slovakie',
    en: 'Slovakia',
    gr: 'pn'
}, {
    sc: 'Sloveinie',
    en: 'Slovenia',
    gr: 'pn'
}, {
    sc: 'Sooth Africae',
    en: 'South Africa',
    gr: 'pn'
}, {
    sc: 'Sooth Americae',
    en: 'South America',
    gr: 'pn',
    or: [
        ['Scots <em>sooth</em> + ', '<em>Scots</em> Ameriky']
    ]
}, {
    sc: 'Sooth Pole',
    gr: 'pn',
    en: 'Antarctica'
}, {
    sc: 'Spaingie',
    tr: 'Spainie',
    en: 'Spain',
    gr: 'pn'
}, {
    sc: 'Swaiden',
    def: 'a country in Scandinaivie',
    tr: 'sweden',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Swedin, Suadin'],
        [G.notes.or.mlg + ', ' + G.notes.or.md, 'Sweden']
    ]
}, {
    sc: 'Swade',
    def: [
        ['a body that bides in, or is frae, Swaden', 'someane o Swades strynd'], 'a kin o neep'
    ],
    tr: ['swede', 'neep', 'turnip'],
    gr: ['n']
}, {
    sc: 'Swades',
    sc_alt: 'Swaidish',
    tr: 'swedish',
    def: 'anent Swaiden, its fowk, or their leid',
    gr: ['adj']
}, {
    sc: 'Swades',
    sc_alt: 'Swaidish',
    tr: 'swedish',
    def: 'the Scandinaivie leid o Swaiden, forby spoken in pairts o Finland',
    gr: ['n']
}, {
    sc: 'Swisserland',
    en: 'Switzerland',
    gr: 'pn'
}, {
    sc: 'Syrie',
    en: 'Syria',
    gr: 'pn',
    or: [[G.notes.or.as, 'Surry, Serry, Cyrie']]
}, {
    sc: ['The Muckle Dub', 'Atlantic Ocean'],
    en: 'Atlantic Ocean',
    gr: 'pn'
}, {
    sc: 'Turkey',
    en: 'Turkey',
    gr: 'pn'
}, {
    sc: 'Ungairy',
    pr: 'unGairae',
    en: 'Hungary',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Ungarie, Ungary'],
    ]
}, {
    sc: 'Ungairian',
    pr: 'unGairian',
    en: 'Hungarian',
    gr: 'adj'
}, {
    sc: 'Wales',
    def: 'a country in Great Brítain that is pairt o the Unitit Kinrick',
    gr: 'pn'
}, {
    sc: 'warld',
    pr: 'wurald',
    en: 'world',
    gr: 'pn'
}, {
    sc: 'Wast Indies',
    en: 'West Indies',
    gr: 'pn'
}, {
    sc: 'Birran',
    en: 'Bergen',
    gr: 'pn',
    def: 'a seaport in sooth-wast Norrowa'
}, {
    sc: ['Bourdeux', 'Bourdeuse'],
    en: 'Bordeaux',
    gr: 'pn',
    def: 'a port in sooth-wast Fraunce'
}, {
    sc: ['Bristow', 'Bristol'],
    en: 'Bristol',
    gr: 'pn',
    def: 'a cíty in sooth-wast England'
}, {
    sc: 'Bullen',
    en: 'Boulogne',
    gr: 'pn',
    def: 'a ferry port an toun in northren Fraunce'
}, {
    sc: 'Calice',
    en: 'Calais',
    gr: 'pn',
    def: 'a ferry port in northren Fraunce'
}, {
    sc: 'Camfeir',
    en: [
        ['Campveer', 'Veere']
    ],
    gr: 'pn',
    def: 'a cíty in the Netherlands'
}, {
    sc: 'Caunterberry',
    en: 'Canterbury',
    gr: 'pn',
    def: 'a cíty in sooth-east England'
}, {
    sc: 'Caurdiff',
    en: 'Cardiff',
    gr: 'pn',
    def: 'the capital cíty o Wales'
}, {
    sc: 'Colpenhaven',
    en: 'Copenhagen',
    gr: 'pn',
    def: 'the capital cíty o Denmark'
}, {
    sc: 'Cortrik',
    en: 'Courtrai',
    gr: 'pn',
    def: 'a cíty in Belgium'
}, {
    sc: 'Cullen',
    en: 'Cologne',
    gr: 'pn',
    def: 'a cíty in Germany'
}, {
    sc: ['Danskin', 'Gdańsk'],
    en: 'Gdańsk',
    gr: 'pn',
    def: 'a cíty in Poland'
}, {
    sc: ['Druntin', 'Trondheim'],
    en: 'Trondheim',
    gr: 'pn',
    def: 'a toun in Norrowa'
}, {
    sc: 'Elsenure',
    en: [
        ['Helsignor, Elsinore']
    ],
    gr: 'pn',
    def: 'a cíty in eastlin Denmark'
}, {
    sc: ['Frankfuird', 'Frankfort', 'Frankfurt'],
    en: 'Frankfurt',
    gr: 'pn',
    def: 'a cíty in waster Germany'
}, {
    sc: 'Gottenberry',
    en: 'Gothenburg',
    gr: 'pn',
    def: 'a cíty in sooth-wast Swaden'
}, {
    sc: 'Grenidge',
    en: 'Greenwich',
    gr: 'pn',
    def: 'a burgh in sooth-east London'
}, {
    sc: 'Hambra',
    en: 'Hamburg',
    gr: 'pn',
    def: 'a cíty in norland Germany'
}, {
    sc: 'Handwarp',
    en: 'Antwerp',
    gr: 'pn',
    def: 'a cíty in northren Belgium'
}, {
    sc: 'Leisborn',
    en: 'Lisbon',
    def: 'the capital cíty o Portingal'
}, {
    sc: 'Lovan',
    en: 'Leuven',
    gr: 'pn',
    def: 'a cíty in Belgium'
}, {
    sc: 'Luipkie',
    en: 'Lübeck',
    gr: 'pn',
    def: 'a cíty in northren Germany'
}, {
    sc: 'Luke',
    en: 'Liège',
    gr: 'pn',
    def: 'a stewartry o eastlin Belgium'
}, {
    sc: ['London', 'Lunnon'],
    en: 'London',
    gr: 'pn',
    def: 'the capital cíty o England'
}, {
    sc: 'Maestricht',
    en: 'Maastricht',
    gr: 'pn',
    def: 'a cíty in the Netherlands'
}, {
    sc: 'North Macedonie',
    en: 'North Macedonia',
    tr: ['Macedonia', 'Macedonie', 'Macedone'],
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Macedone']
    ]
}, {
    sc: 'Norridge',
    en: 'Norwich',
    gr: 'pn',
    def: 'a cíty in eastlin England'
}, {
    sc: 'Ozenbrig',
    en: 'Osnabrück',
    gr: 'pn',
    def: 'a cíty in north-wast Germany'
}, {
    sc: 'Pairis',
    en: 'Paris',
    gr: 'pn',
    def: 'the capital cíty o Fraunce'
}, {
    sc: 'Poyters',
    en: 'Poitiers',
    gr: 'pn',
    def: 'a cíty in wast-central Fraunce'
}, {
    sc: 'The Rotchell',
    en: 'La Rochelle',
    gr: 'pn',
    def: 'a cíty in waster Fraunce'
}, {
    sc: 'Reid Sea',
    en: 'Red Sea',
    gr: 'pn',
    or: [
        [G.notes.or.as, 'Reid Se']
    ]
}, {
    sc: 'Roterdame',
    en: 'Rotterdam',
    gr: 'pn',
    def: 'a cíty in the Netherlands'
}, {
    sc: 'Salesberry',
    en: 'Salisbury',
    gr: 'pn',
    def: 'a cíty in the sooth o England'
}, {
    sc: 'Statin',
    en: 'Stettin',
    gr: 'pn',
    def: 'a cíty in Poland'
}, {
    sc: 'Straesberry',
    en: 'Strasbourg',
    gr: 'pn',
    def: 'a cíty in north-east Fraunce'
}, {
    sc: 'Turing',
    en: 'Touraine',
    gr: 'pn',
    def: 'ane o the tradítional stewartries o Fraunce'
}, {
    sc: ['Upslo', 'Oslo'],
    en: 'Oslo',
    gr: 'pn',
    def: 'the capital cíty o Norrowa'
}, {
    sc: 'Utrik',
    en: 'Utrecht',
    gr: 'pn',
    def: 'a cíty in central Netherlands'
}, {
    sc: 'Valsterboom',
    en: 'Falsterbo',
    gr: 'pn',
    def: 'a toun in sooth-wast Denmark'
}, {
    sc: 'Veinice',
    en: 'Venice',
    gr: 'pn',
    def: 'a cíty in nor-east Italy'
}, {
    sc: 'Yearmuith',
    en: '(Great) Yarmouth',
    tr: 'Yarmouth',
    gr: 'pn',
    def: 'a toun in Norfolk, England'
}, {
    sc: ['kintra', 'country'],
    pr: ['kintra', 'kintrae', 'kuntrae'],
    en: 'country',
    gr: 'n'
});
/**
 * Phrases
 */

/**
 * Add phrases to dictionary object
 */

G.dict.push({
    sc: 'at that',
    en: 'with that',
    ex: 'At that, Jamie teuk the gate hame',
    ph: true
}, {
    sc: 'be on the haik for',
    en: 'be on the lookout for',
    ph: true
}, {
    sc: 'mak namely its pairt in',
    en: 'celebrate its contribution to',
    ex: G.ex.j,
    ph: true
}, {
    sc: ['nae bother', 'nae bather'],
    en: 'no problem',
    ph: true
}, {
    sc: 'for tae',
    en: 'in order to',
    gr: 'subordinatin conj',
    ex: G.ex.k,
    ph: true
}, {
    sc: 'ower and abuin',
    en: 'over and above',
    ph: true
}, {
    sc: 'pit intil effect',
    en: 'implement',
    gr: 'v phr',
    ex: G.ex.f,
    ph: true
}, {
    sc: 'douce and wicelike',
    en: 'constructively',
    gr: 'adv phr',
    ex: 'The twa governments is committit tae haud gaun douce and wicelike',
    ph: true
}, {
    sc: 'gie\'s',
    tr: ['gies', 'gie me', 'gie us', 'give me', 'give us'],
    def: 'Gie me, gie us (contraction o ‘gie us’)'
});
